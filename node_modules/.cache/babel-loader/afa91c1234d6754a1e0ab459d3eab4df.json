{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/PageContent/PageContent.jsx\";\nimport React, { useContext, useMemo, useState } from 'react';\nimport { ProductsContext } from '../../ProductsProvider';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { CartProduct } from '../CartProduct';\nimport { SelectCarts } from '../SelectCarts';\nimport './PageContent.scss';\nimport { initialSortSelect, initialToggleSelect, initialItemsPageSelect } from '../../helpers/select'; //import classNames from 'classnames';\n\nexport const PageContent = ({\n  products,\n  title\n}) => {\n  const {\n    appliedValue,\n    path\n  } = useContext(ProductsContext);\n  const [sortCarts, setSortCarts] = useState(initialSortSelect);\n  const [toggleSort, setToggleSort] = useState(initialToggleSelect);\n  const [pageItems, setPageItems] = useState(initialItemsPageSelect);\n  const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelect);\n  console.log(sortCarts);\n  console.log(sortCarts);\n  console.log(sortCarts);\n  const visibleProducts = useMemo(() => appliedValue[path] ? products.filter(product => product.name.toLowerCase().includes(appliedValue[path].toLowerCase())) : products, [appliedValue[path], products]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"PageContent-Link nav\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/home.svg\",\n    alt: \"Home\",\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/next-disabled.svg\",\n    alt: \"Next\",\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, path[0].toUpperCase() + path.slice(1))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageContent-Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, visibleProducts.length, \" items\")), appliedValue[path] && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, visibleProducts.length, \" results\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Selects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectSort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SelectCarts, {\n    toggle: toggleSort,\n    setToggle: setToggleSort,\n    option: sortCarts,\n    setOption: setSortCarts,\n    list: ['Alphabetically', 'Price hight to low', 'Price low to hight'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectPageItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SelectCarts, {\n    toggle: toggleItemsPage,\n    setToggle: setToggleItemsPage,\n    option: pageItems,\n    setOption: setPageItems,\n    list: ['All items', '7', '14'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectItemsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, visibleProducts.map(product => /*#__PURE__*/React.createElement(CartProduct, Object.assign({}, product, {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 44\n    }\n  }))))));\n};\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/PageContent/PageContent.jsx"],"names":["React","useContext","useMemo","useState","ProductsContext","PropTypes","NavLink","CartProduct","SelectCarts","initialSortSelect","initialToggleSelect","initialItemsPageSelect","PageContent","products","title","appliedValue","path","sortCarts","setSortCarts","toggleSort","setToggleSort","pageItems","setPageItems","toggleItemsPage","setToggleItemsPage","console","log","visibleProducts","filter","product","name","toLowerCase","includes","toUpperCase","slice","length","map","id","propTypes","array","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo, useState } from 'react';\nimport { ProductsContext } from '../../ProductsProvider';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { CartProduct } from '../CartProduct';\nimport { SelectCarts } from '../SelectCarts';\nimport './PageContent.scss';\nimport { initialSortSelect, initialToggleSelect, initialItemsPageSelect } from '../../helpers/select';\n//import classNames from 'classnames';\n\nexport const PageContent = ({ products, title }) => {\n  const {appliedValue, path } = useContext(ProductsContext);\n  const [sortCarts, setSortCarts] = useState(initialSortSelect)\n  const [toggleSort, setToggleSort] = useState(initialToggleSelect);\n  const [pageItems, setPageItems] = useState(initialItemsPageSelect)\n  const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelect);\n\n  console.log(sortCarts);\n  console.log(sortCarts);\n  console.log(sortCarts);\n  const visibleProducts = useMemo(() => (\n    appliedValue[path]\n      ?  products.filter(product => product.name.toLowerCase()\n          .includes(appliedValue[path].toLowerCase()))\n      :  products\n  ), [appliedValue[path], products]);\n\n  return (\n    <div className=\"PageContent\">\n      {!appliedValue[path] && (\n        <div className=\"PageContent-Nav\">\n          <NavLink className=\"PageContent-Link nav\" to=\"/home\">\n            <img src=\"./img/home.svg\" alt=\"Home\" className=\"nav\"/>\n          </NavLink>\n          <img src=\"./img/next-disabled.svg\" alt=\"Next\" className=\"nav\"/>\n          <p className=\"nav\">{path[0].toUpperCase() + path.slice(1)}</p>\n        </div>\n      )}\n      <div className=\"PageContent-Main\">\n        {!appliedValue[path] && (\n          <>\n            <h1 className=\"PageContent-Title\">{title}</h1>\n            <p className=\"PageContent-Count\">\n            {visibleProducts.length} items\n            </p>\n          </>\n        )}\n        {appliedValue[path] && (\n          <p className=\"PageContent-Results\">\n          {visibleProducts.length} results\n          </p>\n        )}\n        <div className=\"PageContent-Selects\">\n          <div className=\"PageContent-SelectSort\">\n            <SelectCarts\n              toggle={toggleSort}\n              setToggle={setToggleSort}\n              option={sortCarts}\n              setOption={setSortCarts}\n              list={['Alphabetically', 'Price hight to low', 'Price low to hight']}\n            />\n          </div>\n          <div className=\"PageContent-SelectPageItems\">\n            <SelectCarts\n              toggle={toggleItemsPage}\n              setToggle={setToggleItemsPage}\n              option={pageItems}\n              setOption={setPageItems}\n              list={['All items', '7', '14']}\n            />\n          </div>\n          {/* <div className=\"PageContent-SelectCarts SelectCarts\">\n            <div className=\"SelectCarts-Container\">\n              <p className=\"SelectCarts-Text\">{sortCarts}</p>\n              {!toggleSort ? (\n                <button\n                  className=\"SelectCarts-Button\"\n                  type=\"button\"\n                  onClick={() => setToggleSort(true)}\n                >\n                  <img src=\"./img/down.svg\" alt=\"Down\"/>\n                </button>\n              ) : (\n                <button\n                  className=\"SelectCarts-Button\"\n                  type=\"button\"\n                  onClick={() => setToggleSort(false)}\n                >\n                  <img src=\"./img/up.svg\" alt=\"Up\"/>\n                </button>\n              )}\n            </div>\n            <ul className={classNames('SelectCarts-List', {\n                visible_list: !toggleSort,\n              })}\n            >\n              {['Alphabetically', 'Price hight to low', 'Price low to hight'].map(item => (\n                <li\n                  className={classNames('SelectCarts-Item', {\n                    selected: item === sortCarts,\n                  })}\n                  key={item}\n                  onClick={() => setSortCarts(item)}\n                >\n                  {item}\n                </li>\n\n              ))}\n            </ul> */}\n          {/* </div> */}\n          <div className=\"PageContent-SelectItemsPage\">{}</div>\n        </div>\n        <div className=\"PageContent-Content\">\n          { visibleProducts.map(product => <CartProduct {...product} key={product.id}/>)}\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/PageContent/PageContent.jsx\";\nimport React, { useContext, useMemo, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { ProductsContext } from '../../ProductsProvider';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { CartProduct } from '../CartProduct';\nimport { SelectCarts } from '../SelectCarts';\nimport './PageContent.scss';\nimport { initialSortSelect, initialToggleSelect, initialItemsPageSelect } from '../../helpers/select';\nimport { Pagination } from '../Pagination'; //import classNames from 'classnames';\n\nexport const PageContent = ({\n  products,\n  title\n}) => {\n  const {\n    appliedValue,\n    path,\n    sortCarts,\n    setSortCarts,\n    toggleSort,\n    setToggleSort,\n    pageItems,\n    setPageItems,\n    toggleItemsPage,\n    setToggleItemsPage,\n    search,\n    page\n  } = useContext(ProductsContext);\n  const sortProducts = useMemo(() => {\n    switch (sortCarts[path]) {\n      case 'Alphabetically':\n        return [...products].sort((a, b) => a.name.localeCompare(b.name));\n\n      case 'Price low to hight':\n        return [...products].sort((a, b) => a.price[0] - b.price[0]);\n\n      case 'Price hight to low':\n        return [...products].sort((a, b) => b.price[0] - a.price[0]);\n\n      default:\n        return products;\n      //break;\n    }\n  }, [sortCarts[path]]);\n  const visibleProducts = useMemo(() => appliedValue[path] ? products.filter(product => product.name.toLowerCase().includes(appliedValue[path].toLowerCase())) : sortProducts, [appliedValue[path], sortProducts]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"PageContent-Link nav\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/home.svg\",\n    alt: \"Home\",\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/next-disabled.svg\",\n    alt: \"Next\",\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, path[0].toUpperCase() + path.slice(1))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageContent-Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, visibleProducts.length, \" items\")), appliedValue[path] && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, visibleProducts.length, \" results\"), path !== 'favorites' && !appliedValue[path] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Selects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-SelectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Sort by\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectSort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectCarts, {\n    toggle: toggleSort,\n    setToggle: setToggleSort,\n    option: sortCarts,\n    setOption: setSortCarts,\n    list: ['Alphabetically', 'Price hight to low', 'Price low to hight'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectsContainer PageContent-SelectsContainer_hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-SelectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Items on page\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectPageItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SelectCarts, {\n    toggle: toggleItemsPage,\n    setToggle: setToggleItemsPage,\n    option: pageItems,\n    setOption: setPageItems,\n    list: ['All items', '7', '14'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectItemsPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, visibleProducts.map(product => /*#__PURE__*/React.createElement(CartProduct, Object.assign({}, product, {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 44\n    }\n  }))))), path !== 'favorites' && pageItems[path] !== \"All items\" && /*#__PURE__*/React.createElement(Pagination, {\n    total: sortProducts.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 71\n    }\n  }));\n};\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/PageContent/PageContent.jsx"],"names":["React","useContext","useMemo","useState","useLocation","useHistory","ProductsContext","PropTypes","NavLink","CartProduct","SelectCarts","initialSortSelect","initialToggleSelect","initialItemsPageSelect","Pagination","PageContent","products","title","appliedValue","path","sortCarts","setSortCarts","toggleSort","setToggleSort","pageItems","setPageItems","toggleItemsPage","setToggleItemsPage","search","page","sortProducts","sort","a","b","name","localeCompare","price","visibleProducts","filter","product","toLowerCase","includes","toUpperCase","slice","length","map","id","propTypes","array","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { ProductsContext } from '../../ProductsProvider';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { CartProduct } from '../CartProduct';\nimport { SelectCarts } from '../SelectCarts';\nimport './PageContent.scss';\nimport { initialSortSelect, initialToggleSelect, initialItemsPageSelect } from '../../helpers/select';\nimport { Pagination } from '../Pagination';\n//import classNames from 'classnames';\n\nexport const PageContent = ({ products, title }) => {\n  const {\n    appliedValue,\n    path,\n    sortCarts,\n    setSortCarts,\n    toggleSort,\n    setToggleSort,\n    pageItems,\n    setPageItems,\n    toggleItemsPage,\n    setToggleItemsPage,\n    search,\n    page,\n  } = useContext(ProductsContext);\n\n  const sortProducts = useMemo(() => {\n    switch(sortCarts[path]) {\n      case 'Alphabetically':\n        return [...products].sort((a, b) => (\n          a.name.localeCompare(b.name)));\n      case 'Price low to hight':\n        return [...products].sort((a, b) => (\n          a.price[0] - b.price[0]));\n      case 'Price hight to low':\n        return [...products].sort((a, b) => (\n          b.price[0] - a.price[0]));\n      default:\n        return products;\n        //break;\n    }\n  }, [sortCarts[path]]);\n\n  const visibleProducts = useMemo(() => (\n    appliedValue[path]\n      ?  products.filter(product => product.name.toLowerCase()\n          .includes(appliedValue[path].toLowerCase()))\n      :  sortProducts\n  ), [appliedValue[path], sortProducts]);\n\n  return (\n    <>\n      <div className=\"PageContent\">\n        {!appliedValue[path] && (\n          <div className=\"PageContent-Nav\">\n            <NavLink className=\"PageContent-Link nav\" to=\"/home\">\n              <img src=\"./img/home.svg\" alt=\"Home\" className=\"nav\"/>\n            </NavLink>\n            <img src=\"./img/next-disabled.svg\" alt=\"Next\" className=\"nav\"/>\n            <p className=\"nav\">{path[0].toUpperCase() + path.slice(1)}</p>\n          </div>\n        )}\n        <div className=\"PageContent-Main\">\n          {!appliedValue[path] && (\n            <>\n              <h1 className=\"PageContent-Title\">{title}</h1>\n              <p className=\"PageContent-Count\">\n              {visibleProducts.length} items\n              </p>\n            </>\n          )}\n          {appliedValue[path] && (\n            <p className=\"PageContent-Results\">\n            {visibleProducts.length} results\n            </p>\n          )}\n          {(path !== 'favorites' && !appliedValue[path]) && (\n            <div className=\"PageContent-Selects\">\n              <div className=\"PageContent-SelectsContainer\">\n                <p className=\"PageContent-SelectName\">Sort by</p>\n                <div className=\"PageContent-SelectSort\">\n                  <SelectCarts\n                    toggle={toggleSort}\n                    setToggle={setToggleSort}\n                    option={sortCarts}\n                    setOption={setSortCarts}\n                    list={['Alphabetically', 'Price hight to low', 'Price low to hight']}\n                  />\n                </div>\n              </div>\n              <div className=\"PageContent-SelectsContainer PageContent-SelectsContainer_hidden\">\n                <p className=\"PageContent-SelectName\">Items on page</p>\n                <div className=\"PageContent-SelectPageItems\">\n                  <SelectCarts\n                    toggle={toggleItemsPage}\n                    setToggle={setToggleItemsPage}\n                    option={pageItems}\n                    setOption={setPageItems}\n                    list={['All items', '7', '14']}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n          <div className=\"PageContent-SelectItemsPage\">{}</div>\n        </div>\n        <div className=\"PageContent-Content\">\n          { visibleProducts.map(product => <CartProduct {...product} key={product.id}/>)}\n        </div>\n      </div>\n      {((path !== 'favorites' && pageItems[path] !== \"All items\")) && <Pagination total={sortProducts.length}/>}\n    </>\n  )\n}\n\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
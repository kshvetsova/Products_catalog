{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/Search/Search.jsx\";\nimport React, { useContext, useState, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { setValueInput, initialValue } from '../../helpers/search';\nimport './Search.scss';\nimport { ProductsContext } from '../../ProductsProvider';\nexport const Search = () => {\n  const [value, setValue] = useState(initialValue);\n  const {\n    applyValue,\n    appliedValue,\n    setAppliedValue,\n    path,\n    changeHistory,\n    deleteHistory\n  } = useContext(ProductsContext); // useMemo(() => {\n  //     if (appliedValue[path]) {\n  //       changeHistory('query', value[path]);\n  //       deleteHistory('sort')\n  //     } else if (!appliedValue[path]) {\n  //       deleteHistory('query')\n  //     }\n  //     // else if (pageItems[path] === 'All items') {\n  //     //   deleteHistory('perPage');\n  //     //   deleteHistory('page');\n  //     // }\n  // }, [appliedValue[path], path]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('Search', {\n      search_hidden: ['home', 'cart'].includes(path) || path.includes()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"Search-Input\",\n    type: \"text\",\n    name: path,\n    placeholder: `Search in ${path}...`,\n    value: setValueInput(path, value),\n    onChange: e => {\n      setValue({ ...value,\n        [path]: e.target.value\n      });\n      applyValue({ ...appliedValue,\n        [path]: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), value[path] ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Search-ButtonClear button-search\",\n    type: \"button\",\n    tabIndex: \"0\",\n    onClick: () => {\n      setValue({ ...value,\n        [path]: ''\n      });\n      setAppliedValue({ ...value,\n        [path]: ''\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/clear.svg\",\n    alt: \"Clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Search-ButtonSearch button-search\",\n    type: \"button\",\n    tabIndex: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/search.svg\",\n    alt: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/Search/Search.jsx"],"names":["React","useContext","useState","useMemo","classNames","setValueInput","initialValue","ProductsContext","Search","value","setValue","applyValue","appliedValue","setAppliedValue","path","changeHistory","deleteHistory","search_hidden","includes","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,OAAtC,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,sBAA5C;AACA,OAAO,eAAP;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACI,YAAD,CAAlC;AACA,QAAM;AAAEK,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,eAA5B;AAA6CC,IAAAA,IAA7C;AAAmDC,IAAAA,aAAnD;AAAkEC,IAAAA;AAAlE,MAAoFf,UAAU,CAACM,eAAD,CAApG,CAF0B,CAI1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEH,UAAU,CAAC,QAAD,EAAW;AACnCa,MAAAA,aAAa,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiBC,QAAjB,CAA0BJ,IAA1B,KAAmCA,IAAI,CAACI,QAAL;AADf,KAAX,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAEJ,IAHR;AAIE,IAAA,WAAW,EAAG,aAAYA,IAAK,KAJjC;AAKE,IAAA,KAAK,EAAET,aAAa,CAACS,IAAD,EAAOL,KAAP,CALtB;AAME,IAAA,QAAQ,EAAEU,CAAC,IAAI;AACbT,MAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAU,SAACK,IAAD,GAAQK,CAAC,CAACC,MAAF,CAASX;AAA3B,OAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,EAAC,GAAGC,YAAJ;AAAkB,SAACE,IAAD,GAAQK,CAAC,CAACC,MAAF,CAASX;AAAnC,OAAD,CAAV;AACH,KATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAeGA,KAAK,CAACK,IAAD,CAAL,gBACC;AACE,IAAA,SAAS,EAAC,kCADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAC,GAHX;AAIE,IAAA,OAAO,EAAE,MAAM;AACbJ,MAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAU,SAACK,IAAD,GAAQ;AAAlB,OAAD,CAAR;AACAD,MAAAA,eAAe,CAAC,EAAC,GAAGJ,KAAJ;AAAU,SAACK,IAAD,GAAQ;AAAlB,OAAD,CAAf;AACH,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AACE,IAAA,GAAG,EAAC,iBADN;AAEE,IAAA,GAAG,EAAC,OAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADD,gBAgBD;AACE,IAAA,SAAS,EAAC,mCADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAC,GAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,GAAG,EAAC,kBADN;AAEE,IAAA,GAAG,EAAC,QAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA/BF,CADF;AA6CD,CA9DM","sourcesContent":["import React, { useContext, useState, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { setValueInput, initialValue } from '../../helpers/search';\nimport './Search.scss';\nimport { ProductsContext } from '../../ProductsProvider';\n\nexport const Search = () => {\n  const [value, setValue] = useState(initialValue);\n  const { applyValue, appliedValue, setAppliedValue, path, changeHistory, deleteHistory } = useContext(ProductsContext);\n\n  // useMemo(() => {\n  //     if (appliedValue[path]) {\n  //       changeHistory('query', value[path]);\n  //       deleteHistory('sort')\n  //     } else if (!appliedValue[path]) {\n  //       deleteHistory('query')\n  //     }\n  //     // else if (pageItems[path] === 'All items') {\n  //     //   deleteHistory('perPage');\n  //     //   deleteHistory('page');\n  //     // }\n  // }, [appliedValue[path], path]);\n\n  return (\n    <div className={classNames('Search', {\n      search_hidden: ['home', 'cart'].includes(path) || path.includes(),\n      })}\n    >\n      <input\n        className=\"Search-Input\"\n        type=\"text\"\n        name={path}\n        placeholder={`Search in ${path}...`}\n        value={setValueInput(path, value)}\n        onChange={e => {\n          setValue({...value,[path]: e.target.value});\n          applyValue({...appliedValue, [path]: e.target.value});\n      }}\n      />\n      {value[path] ? (\n        <button\n          className=\"Search-ButtonClear button-search\"\n          type=\"button\"\n          tabIndex=\"0\"\n          onClick={() => {\n            setValue({...value,[path]: ''});\n            setAppliedValue({...value,[path]: ''});\n        }}\n        >\n          <img\n            src=\"./img/clear.svg\"\n            alt=\"Clear\"\n          />\n        </button>\n      ) : (\n      <button\n        className=\"Search-ButtonSearch button-search\"\n        type=\"button\"\n        tabIndex=\"0\"\n      >\n        <img\n          src=\"./img/search.svg\"\n          alt=\"Search\"\n        />\n      </button>\n      )}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/SelectCarts/SelectCarts.jsx\";\nimport React, { useContext, useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './SelectCarts.scss';\nimport { ProductsContext } from '../../ProductsProvider';\nimport { initialSortSelect, initialToggleSelect, initialItemsPageSelect } from '../../helpers/select';\nexport const SelectCarts = ({\n  // toggleSort,\n  // setToggleSort,\n  // sortCarts,\n  //setSortCarts,\n  list\n}) => {\n  const [sortCarts, setSortCarts] = useState(initialSortSelect);\n  const [toggleSort, setToggleSort] = useState(initialToggleSelect);\n  useEffect; // const [pageItems, setPageItems] = useState(initialItemsPageSelect)\n  // const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelect);\n\n  const {\n    path\n  } = useContext(ProductsContext);\n  console.log(path);\n  console.log(toggleSort, sortCarts);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SelectCarts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"SelectCarts-Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, sortCarts[path]), !toggleSort[path] ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"SelectCarts-Button\",\n    type: \"button\",\n    onClick: () => {\n      setToggleSort({ ...toggleSort,\n        [path]: true\n      });\n      console.log('kat');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/down.svg\",\n    alt: \"Down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"SelectCarts-Button\",\n    type: \"button\",\n    onClick: () => setToggleSort({ ...toggleSort,\n      [path]: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/up.svg\",\n    alt: \"Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames('SelectCarts-List', {\n      visible_list: !toggleSort[path]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, list.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    className: classNames('SelectCarts-Item', {\n      selected: item === sortCarts[path]\n    }),\n    key: item,\n    onClick: () => setSortCarts({ ...sortCarts,\n      [path]: item\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, item))));\n};\nSelectCarts.propTypes = {\n  // toggleSort: PropTypes.object.isRequired,\n  // setToggleSort: PropTypes.func.isRequired,\n  // sortCarts: PropTypes.object.isRequired,\n  // setSortCarts: PropTypes.func.isRequired,\n  list: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/SelectCarts/SelectCarts.jsx"],"names":["React","useContext","useState","classNames","PropTypes","ProductsContext","initialSortSelect","initialToggleSelect","initialItemsPageSelect","SelectCarts","list","sortCarts","setSortCarts","toggleSort","setToggleSort","useEffect","path","console","log","visible_list","map","item","selected","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './SelectCarts.scss';\nimport { ProductsContext } from '../../ProductsProvider';\nimport { initialSortSelect, initialToggleSelect, initialItemsPageSelect } from '../../helpers/select';\n\nexport const SelectCarts = ({\n  // toggleSort,\n  // setToggleSort,\n  // sortCarts,\n  //setSortCarts,\n  list,\n}) => {\n  const [sortCarts, setSortCarts] = useState(initialSortSelect)\n  const [toggleSort, setToggleSort] = useState(initialToggleSelect);\n\n  useEffect\n  // const [pageItems, setPageItems] = useState(initialItemsPageSelect)\n  // const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelect);\n\n  const { path } = useContext(ProductsContext);\n  console.log(path);\n  console.log(toggleSort, sortCarts);\n\n  return (\n    <div className=\"SelectCarts\">\n      {/* <div className=\"SelectCarts-Container\"> */}\n        <p className=\"SelectCarts-Text\">{sortCarts[path]}</p>\n        {!toggleSort[path] ? (\n          <button\n            className=\"SelectCarts-Button\"\n            type=\"button\"\n            onClick={() => {\n              setToggleSort({...toggleSort, [path]: true});\n              console.log('kat');\n            }}\n          >\n            <img src=\"./img/down.svg\" alt=\"Down\"/>\n          </button>\n        ) : (\n          <button\n            className=\"SelectCarts-Button\"\n            type=\"button\"\n            onClick={() => setToggleSort({...toggleSort, [path]: false })}\n          >\n            <img src=\"./img/up.svg\" alt=\"Up\"/>\n          </button>\n        )}\n      {/* //</div> */}\n      <ul className={classNames('SelectCarts-List', {\n          visible_list: !toggleSort[path],\n        })}\n      >\n        {list.map(item => (\n          <li\n            className={classNames('SelectCarts-Item', {\n              selected: item === sortCarts[path],\n            })}\n            key={item}\n            onClick={() => setSortCarts({...sortCarts, [path]: item})}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nSelectCarts.propTypes = {\n  // toggleSort: PropTypes.object.isRequired,\n  // setToggleSort: PropTypes.func.isRequired,\n  // sortCarts: PropTypes.object.isRequired,\n  // setSortCarts: PropTypes.func.isRequired,\n  list: PropTypes.array.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
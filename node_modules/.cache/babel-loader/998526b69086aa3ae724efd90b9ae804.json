{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/CartSlider/CartSlider.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getSliderWidth, getCartLength, getMargin, getMarginLeft } from '../../helpers/slider';\nimport classNames from 'classnames';\nimport { CartProduct } from '../CartProduct';\nimport cartProducts from '../../data/phones.json';\nimport './CartSlider.scss';\nexport const CartSlider = () => {\n  const [carts, setCarts] = useState(cartProducts);\n  const [sliderWidth, setSliderWidth] = useState(getSliderWidth());\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [cartLengs, setCartLength] = useState(get);\n  const [margin, setMargin] = useState(getMargin());\n  const [marginLeft, setMarginLeft] = useState(getMarginLeft());\n  const [buttonNext, setButtonNext] = useState(1);\n  const [buttonPrev, setButtonPrev] = useState('');\n\n  const handleResize = () => {\n    const width = getSliderWidth();\n    setSliderWidth(width);\n    setMargin(getMargin());\n    setMarginLeft(getMarginLeft);\n  };\n\n  window.addEventListener('resize', handleResize);\n  useEffect(() => {\n    setSliderWidth(getSliderWidth);\n    setMargin(getMargin);\n    setMarginLeft(getMarginLeft);\n  }, [window.addEventListener('resize', handleResize)]);\n\n  const handleClickPrev = () => {\n    window.addEventListener('resize', handleResize);\n    let cartLength = getCartLength();\n    let position = currentPosition + (cartLength === 1 ? sliderWidth - marginLeft / 2 : sliderWidth + margin);\n\n    if (position > 0) {\n      position = 0;\n      setButtonPrev(\"\");\n    }\n\n    if (position < 0) {\n      setButtonNext(1);\n    }\n\n    setCurrentPosition(position);\n  };\n\n  const handleClickNext = () => {\n    window.addEventListener('resize', handleResize);\n    let cartLength = getCartLength();\n    let position = currentPosition - (cartLength === 1 ? sliderWidth - marginLeft / 2 : sliderWidth + margin);\n    let maxPosition = (carts.length - cartLength) / cartLength * (cartLength === 1 ? sliderWidth - marginLeft / 2 : sliderWidth + margin);\n\n    if (-position > maxPosition) {\n      position = -maxPosition;\n      setButtonNext('');\n    }\n\n    if (-position < maxPosition) {\n      setButtonPrev(1);\n    }\n\n    setCurrentPosition(position);\n  };\n\n  console.log(currentPosition, buttonPrev, buttonNext);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartSlider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartSlider-Container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"CartSlider-Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartSlider-Buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classNames('button_cart', {//prev_disabled: !buttonPrev,\n      //button_prev: buttonPrev,\n    }),\n    onClick: handleClickPrev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classNames('button_cart', {//next_disabled: !buttonNext,\n      // button_next: buttonNext,\n    }),\n    onClick: handleClickNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartSlider-Slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CartSlider-Content\",\n    style: {\n      transition: `transform ${1000}ms`,\n      transform: `translateX(${currentPosition}px)`,\n      marginLeft: `-${currentPosition + sliderWidth}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartProduct, {\n    sliderWidth: sliderWidth,\n    margin: margin,\n    marginLeft: marginLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/CartSlider/CartSlider.jsx"],"names":["React","useState","useEffect","getSliderWidth","getCartLength","getMargin","getMarginLeft","classNames","CartProduct","cartProducts","CartSlider","carts","setCarts","sliderWidth","setSliderWidth","currentPosition","setCurrentPosition","cartLengs","setCartLength","get","margin","setMargin","marginLeft","setMarginLeft","buttonNext","setButtonNext","buttonPrev","setButtonPrev","handleResize","width","window","addEventListener","handleClickPrev","cartLength","position","handleClickNext","maxPosition","length","console","log","transition","transform"],"mappings":"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","sourcesContent":["import React , { useState, useEffect } from 'react';\nimport { getSliderWidth , getCartLength, getMargin, getMarginLeft} from '../../helpers/slider';\nimport classNames from 'classnames';\nimport { CartProduct } from '../CartProduct';\nimport cartProducts from '../../data/phones.json';\nimport './CartSlider.scss';\n\n\nexport const CartSlider = () => {\n  const [carts, setCarts] = useState(cartProducts)\n  const [sliderWidth, setSliderWidth] = useState(getSliderWidth())\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [cartLengs, setCartLength] = useState(get)\n  const [margin, setMargin] = useState(getMargin());\n  const [marginLeft, setMarginLeft] = useState(getMarginLeft());\n  const [buttonNext, setButtonNext] = useState(1);\n  const [buttonPrev, setButtonPrev] = useState('');\n\n  const handleResize = () => {\n      const width = getSliderWidth();\n      setSliderWidth(width);\n      setMargin(getMargin());\n      setMarginLeft(getMarginLeft)\n    }\n\n  window.addEventListener('resize', handleResize);\n\n  useEffect(() => {\n    setSliderWidth(getSliderWidth);\n    setMargin(getMargin);\n    setMarginLeft(getMarginLeft);\n\n  }, [window.addEventListener('resize', handleResize)])\n\n  const handleClickPrev = () => {\n    window.addEventListener('resize', handleResize);\n    let cartLength = getCartLength();\n\n    let position = currentPosition + (cartLength ===1 ? sliderWidth - (marginLeft / 2) : sliderWidth + margin);\n\n    if (position > 0) {\n      position = 0;\n      setButtonPrev(\"\");\n   }\n\n   if (position < 0) {\n      setButtonNext(1);\n   }\n    setCurrentPosition(position);\n  }\n\n  const handleClickNext = () => {\n    window.addEventListener('resize', handleResize);\n    let cartLength = getCartLength();\n    let position = currentPosition - (cartLength === 1 ?\n      (sliderWidth - (marginLeft / 2)) : (sliderWidth + margin));\n    let maxPosition = (((carts.length - cartLength) / cartLength) * (cartLength === 1 ? sliderWidth - marginLeft / 2 : sliderWidth + margin));\n\n    if (-(position) > maxPosition) {\n      position = -maxPosition;\n      setButtonNext('')\n    }\n\n    if (-(position) < maxPosition) {\n      setButtonPrev(1)\n    }\n\n    setCurrentPosition(position);\n  };\n\n  console.log(currentPosition, buttonPrev, buttonNext);\n  return (\n    <>\n      <div className=\"CartSlider\">\n        <div className=\"CartSlider-Container\">\n          <p className=\"CartSlider-Title\">Title</p>\n          <div className=\"CartSlider-Buttons\">\n            <button\n              className={classNames('button_cart', {\n              //prev_disabled: !buttonPrev,\n              //button_prev: buttonPrev,\n              })}\n              onClick={handleClickPrev}\n            >\n              {}\n            </button>\n            <button\n              className={classNames('button_cart', {\n              //next_disabled: !buttonNext,\n             // button_next: buttonNext,\n              })}\n              onClick={handleClickNext}\n            >\n              {}\n            </button>\n          </div>\n        </div>\n        <div className=\"CartSlider-Slider\">\n          <div\n            className=\"CartSlider-Content\"\n            style={{\n              transition: `transform ${1000}ms`,\n              transform: `translateX(${currentPosition}px)`,\n              marginLeft: `-${(currentPosition + sliderWidth)}`\n            }}\n          >\n          {/* {carts.map(item => ( */}\n            {/* <div\n              key={item}\n              className=\"Cart\"\n              style={{\n                marginRight: `${sliderWidth < 655 ? 0 : margin}px`,\n                marginLeft: `${sliderWidth < 655 ? marginLeft / 2 : 0}px`\n            }}\n              > */}\n              {/* <img src={`./img/slider/1.jpg`} className=\"Cart-Image\"/> */}\n              <CartProduct\n                sliderWidth={sliderWidth}\n                margin={margin}\n                marginLeft={marginLeft}\n              />\n            {/* </div> */}\n          {/* //))} */}\n          </div>\n        </div>\n      </div>\n      {/* <CartProduct /> */}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
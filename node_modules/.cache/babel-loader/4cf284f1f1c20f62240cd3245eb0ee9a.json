{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/ProductCart/ProductCart.jsx\";\nimport React, { useContext, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductCart.scss';\nimport { ProductsContext } from '../../ProductsProvider';\nexport const ProductCart = React.memo(({\n  name,\n  price,\n  image,\n  id,\n  count,\n  quantity,\n  setQuantity,\n  setTotalPrice,\n  totalPrice\n}) => {\n  const {\n    carts,\n    setCarts\n  } = useContext(ProductsContext);\n  const addCountCart = useCallback(id => setCarts(carts.map(item => item.id === id ? { ...item,\n    count: item.count + 1\n  } : item)), [carts]);\n  const removeCountCart = useCallback(id => setCarts(carts.map(item => item.id === id ? { ...item,\n    count: item.count - 1\n  } : item)), [carts]);\n  console.log('ProductCart');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Close\",\n    onClick: () => setCarts(carts.filter(item => item.id !== id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"ProductCart-Image\",\n    src: image,\n    width: \"66px\",\n    height: \"66px\",\n    alt: \"Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ProductCart-Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerQuantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Remove buttonProduct\",\n    onClick: () => {\n      removeCountCart(id);\n      setQuantity(quantity - 1);\n      setTotalPrice(totalPrice - price);\n    },\n    disabled: count === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-Quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, count), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Add buttonProduct\",\n    onClick: () => {\n      addCountCart(id);\n      setQuantity(quantity + 1);\n      setTotalPrice(totalPrice + price);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"$\", price)));\n});\nProductCart.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  quantity: PropTypes.number.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n  setTotalPrice: PropTypes.func.isRequired,\n  totalPrice: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/ProductCart/ProductCart.jsx"],"names":["React","useContext","useCallback","PropTypes","ProductsContext","ProductCart","memo","name","price","image","id","count","quantity","setQuantity","setTotalPrice","totalPrice","carts","setCarts","addCountCart","map","item","removeCountCart","console","log","filter","propTypes","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { useContext, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductCart.scss';\nimport { ProductsContext } from '../../ProductsProvider';\n\n\nexport const ProductCart = React.memo(({\n  name,\n  price,\n  image,\n  id,\n  count,\n  quantity,\n  setQuantity,\n  setTotalPrice,\n  totalPrice,\n  }) => {\n  const {carts, setCarts} = useContext(ProductsContext);\n\n  const addCountCart = useCallback((id) => setCarts(\n    carts.map(item => (item.id === id)\n    ? { ...item, count: item.count + 1}\n    : item)), [carts]);\n\n  const removeCountCart = useCallback((id) => setCarts(\n    carts.map(item => (item.id === id)\n    ? { ...item, count: item.count - 1}\n    : item)), [carts]);\n\n  console.log('ProductCart');\n\n  return (\n    <div className=\"ProductCart\">\n      <div className=\"ProductCart-ContainerLeft\">\n        <button\n          className=\"ProductCart-Close\"\n          onClick={() => setCarts(carts.filter(item => item.id !== id))}\n        >\n          {}\n        </button>\n        <img\n          className=\"ProductCart-Image\"\n          src={image}\n          width=\"66px\"\n          height=\"66px\"\n          alt=\"Phone\"\n        />\n        <p className=\"ProductCart-Name\">{name}</p>\n      </div>\n      <div className=\"ProductCart-ContainerRight\">\n        <div className=\"ProductCart-ContainerQuantity\">\n          <button\n            className=\"ProductCart-Remove buttonProduct\"\n            onClick={() => {\n              removeCountCart(id);\n              setQuantity(quantity - 1);\n              setTotalPrice(totalPrice - price);\n            }}\n            disabled={(count === 1)}\n          >{}</button>\n          <div className=\"ProductCart-Quantity\">{count}</div>\n          <button\n            className=\"ProductCart-Add buttonProduct\"\n            onClick={() => {\n              addCountCart(id);\n              setQuantity(quantity + 1);\n              setTotalPrice(totalPrice + price);\n              }}\n          >\n            {}\n          </button>\n        </div>\n        <div className=\"ProductCart-Price\">${price}</div>\n      </div>\n    </div>\n  )\n})\n\nProductCart.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  quantity: PropTypes.number.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n  setTotalPrice: PropTypes.func.isRequired,\n  totalPrice: PropTypes.number.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
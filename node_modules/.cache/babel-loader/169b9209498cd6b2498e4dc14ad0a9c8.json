{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/HomePage/HomePage.jsx\";\nimport { createSecretKey } from 'crypto';\nimport React, { useEffect, useState } from 'react';\nimport { useCallback } from 'react';\nimport './HomePage.scss';\nconst initialImages = ['./img/slider/1.jpg', './img/slider/2.jpg', './img/slider/3.jpg', './img/slider/4.jpg', './img/slider/5.jpg', './img/slider/6.jpg'];\nexport const HomePage = () => {\n  const [images, setImages] = useState(initialImages);\n  const [key, setKey] = useState(1);\n  const [imageWidth, setImageWidth] = useState(Math.ceil(document.documentElement.clientWidth * 72.2 / 100));\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [infinite, setInffinite] = useState(true); //const [cu]\n  // useEffect(() => {\n  //   return setImages(initialImages);\n  // }, [])\n\n  console.log(imageWidth);\n\n  const handleClickNext = () => {\n    const maxPosition = (images.length - 1) * imageWidth;\n    let position = currentPosition - imageWidth * 1; // if(-position < maxPosition) {\n    //   // position = currentPosition - imageWidth;\n    //   setImages([...images.slice(1), ...images.splice(0, 1)]);\n    //   console.log(images);\n    //   // position = currentPosition - imageWidth;\n    //   // setCount(1);\n    // }\n    // if(count) {\n    //   position = (0 - imageWidth) + imageWidth;\n    // }\n\n    if (!infinite) {\n      position = -maxPosition;\n    }\n\n    if (infinite) {\n      // images.push(...images.splice(0, 1));\n      setImages([...images.slice(1), ...images.splice(0, 1)]);\n      console.log(images);\n    }\n\n    setKey(key + 1);\n    setCurrentPosition(position);\n  };\n\n  const handleClickPrev = () => {\n    let position = currentPosition + imageWidth * 1; // if (!infinite) {\n    //   position = 0;\n    // }\n\n    if (infinite) {\n      //setImages([...images.slice(-1), ...images])\n      images.unshift(...images.splice(-1));\n    }\n\n    setCurrentPosition(position);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HomePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductsSlider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductsSlider-Button\",\n    onClick: handleClickPrev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/prev.svg\",\n    alt: \"Prev\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"ProductsSlider-List\" // style={{\n    //   transition: `transform ${1000}ms`,\n    //   transform: `translateX(${currentPosition}px)`,\n    // marginLeft: `${0}px`,\n    //  marginLeft: `${currentPosition}px`,\n    //    marginLeft: `${infinite ?\n    //     -(currentPosition+imageWidth * 1)\n    //     : 0}px`,\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, images.map(image => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"ProductsSlider-Item\",\n    key: key + index // key={image}\n    ,\n    style: {\n      transition: `transform ${1000}ms`,\n      transform: `translateX(${currentPosition}px)`,\n      marginLeft: `${0}px` // marginLeft: `${currentPosition}px`,\n      // //   marginLeft: `${infinite ?\n      // //     -(currentPosition+imageWidth * 1)\n      // //     : 0}px`,\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: image,\n    className: \"image\" // style={{\n    //   transition: `transform ${300}ms`,\n    //   transform: `translateX(${currentPosition}px)`,\n    //   marginLeft: `${0}px`,\n    // }}\n    // // style={{\n    // //   width: `${imageWidth}px`,\n    // // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductsSlider-Button\",\n    onClick: () => handleClickNext(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/next.svg\",\n    alt: \"Next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/HomePage/HomePage.jsx"],"names":["createSecretKey","React","useEffect","useState","useCallback","initialImages","HomePage","images","setImages","key","setKey","imageWidth","setImageWidth","Math","ceil","document","documentElement","clientWidth","currentPosition","setCurrentPosition","infinite","setInffinite","console","log","handleClickNext","maxPosition","length","position","slice","splice","handleClickPrev","unshift","map","image","index","transition","transform","marginLeft"],"mappings":"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","sourcesContent":["import { createSecretKey } from 'crypto';\nimport React, { useEffect, useState } from 'react';\nimport { useCallback } from 'react';\nimport './HomePage.scss';\n\nconst initialImages = [\n  './img/slider/1.jpg',\n  './img/slider/2.jpg',\n  './img/slider/3.jpg',\n  './img/slider/4.jpg',\n  './img/slider/5.jpg',\n  './img/slider/6.jpg',\n];\n\n\nexport const HomePage = () => {\n  const [images, setImages] = useState(initialImages);\n  const [ key , setKey ] = useState(1);\n  \n  const [ imageWidth, setImageWidth] = useState(Math.ceil(document.documentElement.clientWidth * 72.2 / 100));\n  const [ currentPosition, setCurrentPosition] = useState(0);\n  const [infinite, setInffinite] = useState(true);\n  //const [cu]\n  // useEffect(() => {\n  //   return setImages(initialImages);\n  // }, [])\n  \n  console.log(imageWidth);\n  const handleClickNext = () => {\n    const maxPosition = (images.length - 1) * imageWidth;\n    let position = currentPosition - imageWidth * 1;\n    // if(-position < maxPosition) {\n    //   // position = currentPosition - imageWidth;\n    //   setImages([...images.slice(1), ...images.splice(0, 1)]);\n    //   console.log(images);\n    //   // position = currentPosition - imageWidth;\n    //   // setCount(1);\n    // }\n    // if(count) {\n    //   position = (0 - imageWidth) + imageWidth;\n    // }\n    if (!infinite) {\n      position = -maxPosition;\n    }\n\n    if (infinite) {\n      // images.push(...images.splice(0, 1));\n      setImages([...images.slice(1), ...images.splice(0, 1)]);\n      console.log(images);\n    }\n      setKey(key + 1);\n      setCurrentPosition(position);\n  };\n\n  const handleClickPrev = () => {\n    let position = currentPosition + imageWidth * 1;\n    // if (!infinite) {\n    //   position = 0;\n    // }\n\n    if (infinite) {\n      //setImages([...images.slice(-1), ...images])\n      images.unshift(...images.splice(-1))\n    }\n    setCurrentPosition(position);\n  }\n\n  return (\n    <div className=\"HomePage\">\n      <div className=\"ProductsSlider\">\n        <button\n          className=\"ProductsSlider-Button\"\n          onClick={handleClickPrev}\n        >\n          <img src=\"./img/prev.svg\" alt=\"Prev\"/>\n        </button>\n        <ul\n          className=\"ProductsSlider-List\"\n          // style={{\n          //   transition: `transform ${1000}ms`,\n          //   transform: `translateX(${currentPosition}px)`,\n            // marginLeft: `${0}px`,\n            //  marginLeft: `${currentPosition}px`,\n          //    marginLeft: `${infinite ?\n          //     -(currentPosition+imageWidth * 1)\n          //     : 0}px`,\n          // }}\n        >\n          {images.map((image) => (\n            <li\n              className=\"ProductsSlider-Item\"\n              key={key + index}\n              // key={image}\n              style={{\n                transition: `transform ${1000}ms`,\n                transform: `translateX(${currentPosition}px)`,\n                marginLeft: `${0}px`,\n                // marginLeft: `${currentPosition}px`,\n              // //   marginLeft: `${infinite ?\n              // //     -(currentPosition+imageWidth * 1)\n              // //     : 0}px`,\n             }}\n            >\n              <img\n                src={image}\n                alt={image}\n                className=\"image\"\n                // style={{\n                //   transition: `transform ${300}ms`,\n                //   transform: `translateX(${currentPosition}px)`,\n                //   marginLeft: `${0}px`,\n                // }}\n                // // style={{\n                // //   width: `${imageWidth}px`,\n                // // }}\n              />\n            </li>\n          ))}\n        </ul>\n        <button className=\"ProductsSlider-Button\" onClick={() => handleClickNext()}>\n          <img src=\"./img/next.svg\" alt=\"Next\"/>\n        </button>\n      </div>\n\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}
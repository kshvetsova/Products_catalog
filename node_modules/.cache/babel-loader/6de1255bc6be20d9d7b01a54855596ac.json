{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/Product/Product.jsx\";\nimport React, { useContext } from 'react';\nimport './Product.scss';\nimport { useHistory } from 'react-router';\nimport { PropTypes } from 'prop-types';\nimport { Buttons } from '../Buttons';\nimport { ProductsContext } from '../../ProductsProvider';\nimport classNames from 'classnames';\nexport const Product = React.memo(({\n  images,\n  name,\n  price,\n  tech,\n  id,\n  type,\n  option\n}) => {\n  const {\n    path\n  } = useContext(ProductsContext);\n  const history = useHistory();\n  console.log('Produ');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Product-ImageContainer\",\n    type: \"button\",\n    onClick: () => history.push(path.includes(`${type}/product`) ? `${id}` : `${type}/product/${id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classNames('Product-Image', {\n      watches_image: option === \"40mm\"\n    }),\n    src: images[0],\n    alt: \"Iphone\",\n    width: \"190px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Product-Info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Product-Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Product-PriceBlock PriceBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PriceBlock-Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, `$${price[0]}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PriceBlock-Sale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, price[1] ? `$${price[1]}` : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"Product-Details Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, tech.map(([name, value]) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"Details-Item\",\n    key: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Details-Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Details-Value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, value))))), /*#__PURE__*/React.createElement(Buttons, {\n    id: id,\n    price: price[0],\n    name: name,\n    image: images[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n});\nProduct.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  id: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  option: PropTypes.string.isRequired,\n  tech: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/Product/Product.jsx"],"names":["React","useContext","useHistory","PropTypes","Buttons","ProductsContext","classNames","Product","memo","images","name","price","tech","id","type","option","path","history","console","log","push","includes","watches_image","map","value","propTypes","arrayOf","string","isRequired","number","array"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport './Product.scss';\nimport { useHistory } from 'react-router';\nimport { PropTypes } from 'prop-types';\nimport { Buttons } from '../Buttons';\nimport { ProductsContext } from '../../ProductsProvider';\nimport classNames from 'classnames';\n\nexport const Product = React.memo(({\n  images,\n  name,\n  price,\n  tech,\n  id,\n  type,\n  option }) => {\n  const { path } = useContext(ProductsContext);\n  const history = useHistory();\n  console.log('Produ')\n\n  return (\n    <div className=\"Product\">\n      <button\n        className=\"Product-ImageContainer\"\n        type=\"button\"\n        onClick={() => history.push(\n          path.includes(`${type}/product`)\n            ? `${id}`\n            : `${type}/product/${id}`\n        )}\n      >\n        <img\n          className={classNames('Product-Image', {\n            watches_image: option === \"40mm\",\n          })}\n          src={images[0]}\n          alt=\"Iphone\"\n          width=\"190px\"\n        />\n      </button>\n      <div className=\"Product-Info\">\n        <p className=\"Product-Name\">\n          {name}\n        </p>\n        <div className=\"Product-PriceBlock PriceBlock\">\n          <div className=\"PriceBlock-Price\">{`$${price[0]}`}</div>\n          <div className=\"PriceBlock-Sale\">\n            {price[1] ? `$${price[1]}` : ''}\n          </div>\n        </div>\n        <div className=\"line\">{}</div>\n        <ul className=\"Product-Details Details\">\n          {tech.map(([name, value]) => (\n            <li className=\"Details-Item\" key={name}>\n              <p className=\"Details-Name\">{name}</p>\n              <p className=\"Details-Value\">{value}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <Buttons id={id} price={price[0]} name={name} image={images[0]}/>\n    </div>\n  );\n})\n\nProduct.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  id: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  option: PropTypes.string.isRequired,\n  tech: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}
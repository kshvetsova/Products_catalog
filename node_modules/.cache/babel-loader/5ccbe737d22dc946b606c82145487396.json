{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/SelectItems/SelectItems.jsx\";\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { ProductsContext } from '../../ProductsProvider';\nexport const SelectItems = ({\n  list\n}) => {\n  const {\n    path,\n    setPage,\n    page,\n    toggleItemsPage,\n    setToggleItemsPage,\n    pageItems,\n    setPageItems\n  } = useContext(ProductsContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classNames('Select-Button', {\n      image_rotate: toggleSort[path]\n    }),\n    type: \"button\",\n    onClick: () => setToggleItemsPage({ ...toggleItemsPage,\n      [path]: !toggleItemsPage[path]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Select-Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, sortCarts[path]), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/down.svg\",\n    alt: \"Down\",\n    className: \"button-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), toggleSort[path] && /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames('Select-List', {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, list.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    className: classNames('Select-Item', {\n      selected: item === sortCarts[path]\n    }),\n    key: item,\n    onClick: () => {\n      setSortCarts({ ...sortCarts,\n        [path]: item\n      });\n      setToggleSort({ ...toggleSort,\n        [path]: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, item))));\n};\nSelectItems.propTypes = {\n  list: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/SelectItems/SelectItems.jsx"],"names":["React","useContext","classNames","PropTypes","ProductsContext","SelectItems","list","path","setPage","page","toggleItemsPage","setToggleItemsPage","pageItems","setPageItems","image_rotate","toggleSort","sortCarts","map","item","selected","setSortCarts","setToggleSort","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACvC,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,kBALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA;AAPI,MAQFZ,UAAU,CAACG,eAAD,CARd;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAEF,UAAU,CAAC,eAAD,EAAkB;AACrCY,MAAAA,YAAY,EAAEC,UAAU,CAACR,IAAD;AADa,KAAlB,CADvB;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,OAAO,EAAE,MAAMI,kBAAkB,CAAC,EAChC,GAAGD,eAD6B;AAEjC,OAACH,IAAD,GAAQ,CAACG,eAAe,CAACH,IAAD;AAFS,KAAD,CALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BS,SAAS,CAACT,IAAD,CAArC,CATF,eAUE;AAAK,IAAA,GAAG,EAAC,gBAAT;AAA0B,IAAA,GAAG,EAAC,MAA9B;AAAqC,IAAA,SAAS,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,EAaGQ,UAAU,CAACR,IAAD,CAAV,iBACC;AAAI,IAAA,SAAS,EAAEL,UAAU,CAAC,aAAD,EAAgB,EAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGI,IAAI,CAACW,GAAL,CAASC,IAAI,iBACZ;AACE,IAAA,SAAS,EAAEhB,UAAU,CAAC,aAAD,EAAgB;AACnCiB,MAAAA,QAAQ,EAAED,IAAI,KAAKF,SAAS,CAACT,IAAD;AADO,KAAhB,CADvB;AAIE,IAAA,GAAG,EAAEW,IAJP;AAKE,IAAA,OAAO,EAAE,MAAM;AACbE,MAAAA,YAAY,CAAC,EAAC,GAAGJ,SAAJ;AAAe,SAACT,IAAD,GAAQW;AAAvB,OAAD,CAAZ;AACAG,MAAAA,aAAa,CAAC,EAAC,GAAGN,UAAJ;AAAgB,SAACR,IAAD,GAAQ;AAAxB,OAAD,CAAb;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGW,IAVH,CADD,CAHH,CAdJ,CADF;AAiFD,CA5FM;AA8FPb,WAAW,CAACiB,SAAZ,GAAwB;AACtBhB,EAAAA,IAAI,EAAEH,SAAS,CAACoB,KAAV,CAAgBC;AADA,CAAxB","sourcesContent":["import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { ProductsContext } from '../../ProductsProvider';\n\nexport const SelectItems = ({ list }) => {\n  const {\n    path,\n    setPage,\n    page,\n    toggleItemsPage,\n    setToggleItemsPage,\n    pageItems,\n    setPageItems,\n  } = useContext(ProductsContext);\n\n  return (\n    <div className=\"Select\">\n      <button\n        className={classNames('Select-Button', {\n          image_rotate: toggleSort[path],\n        })}\n        type=\"button\"\n        onClick={() => setToggleItemsPage({\n          ...toggleItemsPage,\n         [path]: !toggleItemsPage[path]})}\n      >\n        <p className=\"Select-Text\">{sortCarts[path]}</p>\n        <img src=\"./img/down.svg\" alt=\"Down\" className=\"button-image\"/>\n      </button>\n      {toggleSort[path] && (\n        <ul className={classNames('Select-List', {\n        })}\n        >\n          {list.map(item => (\n            <li\n              className={classNames('Select-Item', {\n                selected: item === sortCarts[path],\n              })}\n              key={item}\n              onClick={() => {\n                setSortCarts({...sortCarts, [path]: item});\n                setToggleSort({...toggleSort, [path]: false});\n              }}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      )}\n\n\n      {/* <p className=\"Select-Text\">{pageItems[path]}</p>\n      {!toggleItemsPage[path] ? (\n        <button\n          className=\"Select-Button\"\n          type=\"button\"\n          onClick={() => {\n            setToggleItemsPage({...toggleItemsPage, [path]: true});\n\n          }}\n        >\n          <img src=\"./img/down.svg\" alt=\"Down\"/>\n\n        </button>\n      ) : (\n        <button\n          className=\"Select-Button\"\n          type=\"button\"\n          onClick={() => setToggleItemsPage({...toggleItemsPage, [path]: false})}\n        >\n          <img src=\"./img/up.svg\" alt=\"Up\"/>\n        </button>\n      )}\n      <ul className={classNames('Select-List', {\n          visible_list: !toggleItemsPage[path],\n        })}\n      >\n        {list.map(item => (\n          <li\n            className={classNames('Select-Item', {\n              selected: item === pageItems[path],\n            })}\n            key={item}\n            onClick={() => {\n              setPageItems({...pageItems, [path]: item});\n              if(item !== pageItems[page]) {\n                setPage({...page, [path]: 1});\n              }\n            }}\n          >\n            {item}\n          </li>\n        ))}\n      </ul> */}\n    </div>\n  );\n}\n\nSelectItems.propTypes = {\n  list: PropTypes.array.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
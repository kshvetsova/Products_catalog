{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/ProductCart/ProductCart.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductCart.scss';\nimport phones from '../../data/phones.json';\nimport { ProductsContext } from '../../ProductsProvider';\nexport const ProductCart = ({\n  name,\n  price,\n  image,\n  id,\n  count,\n  quantity,\n  setQuantity\n}) => {\n  //const [quantity, setQuantity] = useState(1);\n  // const [quantity, setQuantity] = useState(\n  //   JSON.parse(localStorage.getItem('quantity')) || {[id]: 1}\n  const {\n    setCarts,\n    carts\n  } = useContext(ProductsContext);\n  c; // );\n  // useEffect(() => setQuantity({...quantity, [id]: 1}), []);\n  // const [quantity, setQuantity] = useState(count);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Close\",\n    onClick: () => setCarts(carts.filter(item => item.id !== id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"ProductCart-Image\",\n    src: image,\n    width: \"66px\",\n    height: \"66px\",\n    alt: \"Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ProductCart-Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerQuantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Remove buttonProduct\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-Quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, count), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Add buttonProduct\",\n    onClick: () => carts.map(item => {\n      if (item.id === id) {\n        return { ...item,\n          count: item.count + 1\n        };\n      } else {\n        return { ...item\n        };\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"$\", price)));\n};\nProductCart.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  quantity: PropTypes.object.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired // type: PropTypes.string.isRequired,\n  // tech: PropTypes.arrayOf(PropTypes.array.isRequired,\n  //   ).isRequired,\n\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/ProductCart/ProductCart.jsx"],"names":["React","useState","useEffect","useContext","PropTypes","phones","ProductsContext","ProductCart","name","price","image","id","count","quantity","setQuantity","setCarts","carts","c","filter","item","map","propTypes","string","isRequired","number","object","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductCart.scss';\nimport phones from '../../data/phones.json';\nimport { ProductsContext } from '../../ProductsProvider';\n\nexport const ProductCart = ({ name, price, image, id, count, quantity, setQuantity }) => {\n  //const [quantity, setQuantity] = useState(1);\n  // const [quantity, setQuantity] = useState(\n  //   JSON.parse(localStorage.getItem('quantity')) || {[id]: 1}\n  const { setCarts, carts } = useContext(ProductsContext);\n  c\n\n  // );\n  // useEffect(() => setQuantity({...quantity, [id]: 1}), []);\n  // const [quantity, setQuantity] = useState(count);\n\n  return (\n    <div className=\"ProductCart\">\n      <div className=\"ProductCart-ContainerLeft\">\n        <button\n          className=\"ProductCart-Close\"\n          onClick={() => setCarts(carts.filter(item => item.id !== id))}\n        >\n          {}\n        </button>\n        <img\n          className=\"ProductCart-Image\"\n          src={image}\n          width=\"66px\"\n          height=\"66px\"\n          alt=\"Phone\"\n        />\n        <p className=\"ProductCart-Name\">{name}</p>\n      </div>\n      <div className=\"ProductCart-ContainerRight\">\n        <div className=\"ProductCart-ContainerQuantity\">\n          <button className=\"ProductCart-Remove buttonProduct\" disabled={true}>{}</button>\n          <div className=\"ProductCart-Quantity\">{count}</div>\n          <button\n            className=\"ProductCart-Add buttonProduct\"\n            onClick={() => carts.map(item => {\n                if (item.id === id) {\n                 return { ...item, count: item.count + 1};\n                } else {\n                  return {...item};\n                }})}\n          >\n            {}\n          </button>\n        </div>\n        <div className=\"ProductCart-Price\">${price}</div>\n      </div>\n    </div>\n  )\n}\n\nProductCart.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  quantity: PropTypes.object.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n\n  // type: PropTypes.string.isRequired,\n  // tech: PropTypes.arrayOf(PropTypes.array.isRequired,\n  //   ).isRequired,\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/SelectItems/SelectItems.jsx\";\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { ProductsContext } from '../../ProductsProvider';\nexport const SelectItems = ({\n  list\n}) => {\n  const {\n    path,\n    setPage,\n    page,\n    toggleItemsPage,\n    setToggleItemsPage,\n    pageItems,\n    setPageItems\n  } = useContext(ProductsContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Select-Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, pageItems[path]), !toggleItemsPage[path] ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Select-Button\",\n    type: \"button\",\n    onClick: () => setToggleItemsPage({ ...toggleItemsPage,\n      [path]: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/down.svg\",\n    alt: \"Down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Select-Button\",\n    type: \"button\",\n    onClick: () => setToggleItemsPage({ ...toggleItemsPage,\n      [path]: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/up.svg\",\n    alt: \"Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames('Select-List', {\n      visible_list: !toggleItemsPage[path]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, list.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    className: classNames('Select-Item', {\n      selected: item === pageItems[path]\n    }),\n    key: item,\n    onClick: () => {\n      setPageItems({ ...pageItems,\n        [path]: item\n      });\n\n      if (item !== pageItems[page]) {\n        setPage({ ...page,\n          [path]: 1\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, item))));\n};\nSelectItems.propTypes = {\n  list: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/SelectItems/SelectItems.jsx"],"names":["React","useContext","classNames","PropTypes","ProductsContext","SelectItems","list","path","setPage","page","toggleItemsPage","setToggleItemsPage","pageItems","setPageItems","visible_list","map","item","selected","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACvC,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,kBALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA;AAPI,MAQFZ,UAAU,CAACG,eAAD,CARd;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BQ,SAAS,CAACL,IAAD,CAArC,CADF,EAEG,CAACG,eAAe,CAACH,IAAD,CAAhB,gBACC;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAMI,kBAAkB,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACH,IAAD,GAAQ;AAA7B,KAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,GAAG,EAAC,gBAAT;AAA0B,IAAA,GAAG,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD,gBASC;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAMI,kBAAkB,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACH,IAAD,GAAQ;AAA7B,KAAD,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,GAAG,EAAC,cAAT;AAAwB,IAAA,GAAG,EAAC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAXJ,eAmBE;AAAI,IAAA,SAAS,EAAEL,UAAU,CAAC,aAAD,EAAgB;AACrCY,MAAAA,YAAY,EAAE,CAACJ,eAAe,CAACH,IAAD;AADO,KAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGD,IAAI,CAACS,GAAL,CAASC,IAAI,iBACZ;AACE,IAAA,SAAS,EAAEd,UAAU,CAAC,aAAD,EAAgB;AACnCe,MAAAA,QAAQ,EAAED,IAAI,KAAKJ,SAAS,CAACL,IAAD;AADO,KAAhB,CADvB;AAIE,IAAA,GAAG,EAAES,IAJP;AAKE,IAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,SAACL,IAAD,GAAQS;AAAvB,OAAD,CAAZ;;AACA,UAAGA,IAAI,KAAKJ,SAAS,CAACH,IAAD,CAArB,EAA6B;AAC3BD,QAAAA,OAAO,CAAC,EAAC,GAAGC,IAAJ;AAAU,WAACF,IAAD,GAAQ;AAAlB,SAAD,CAAP;AACD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGS,IAZH,CADD,CAJH,CAnBF,CADF;AA2CD,CAtDM;AAwDPX,WAAW,CAACa,SAAZ,GAAwB;AACtBZ,EAAAA,IAAI,EAAEH,SAAS,CAACgB,KAAV,CAAgBC;AADA,CAAxB","sourcesContent":["import React, { useContext } from 'react';\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { ProductsContext } from '../../ProductsProvider';\n\nexport const SelectItems = ({ list }) => {\n  const {\n    path,\n    setPage,\n    page,\n    toggleItemsPage,\n    setToggleItemsPage,\n    pageItems,\n    setPageItems,\n  } = useContext(ProductsContext);\n\n  return (\n    <div className=\"Select\">\n      <p className=\"Select-Text\">{pageItems[path]}</p>\n      {!toggleItemsPage[path] ? (\n        <button\n          className=\"Select-Button\"\n          type=\"button\"\n          onClick={() => setToggleItemsPage({...toggleItemsPage, [path]: true})}\n        >\n          <img src=\"./img/down.svg\" alt=\"Down\"/>\n        </button>\n      ) : (\n        <button\n          className=\"Select-Button\"\n          type=\"button\"\n          onClick={() => setToggleItemsPage({...toggleItemsPage, [path]: false})}\n        >\n          <img src=\"./img/up.svg\" alt=\"Up\"/>\n        </button>\n      )}\n      <ul className={classNames('Select-List', {\n          visible_list: !toggleItemsPage[path],\n        })}\n      >\n        {list.map(item => (\n          <li\n            className={classNames('Select-Item', {\n              selected: item === pageItems[path],\n            })}\n            key={item}\n            onClick={() => {\n              setPageItems({...pageItems, [path]: item});\n              if(item !== pageItems[page]) {\n                setPage({...page, [path]: 1});\n              }\n            }}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nSelectItems.propTypes = {\n  list: PropTypes.array.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/PageContent/PageContent.jsx\";\nimport React, { useContext, useMemo } from 'react';\nimport { ProductsContext } from '../../ProductsProvider';\nimport { useHistory, useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Product } from '../Product';\nimport { SelectSort } from '../SelectSort';\nimport { SelectItems } from '../SelectItems';\nimport { initialItemsPageSelect } from '../../helpers/select';\nimport './PageContent.scss';\nimport { Pagination } from '../Pagination';\nexport const PageContent = React.memo(({\n  products,\n  title\n}) => {\n  const {\n    appliedValue,\n    path,\n    sortCarts,\n    pageItems,\n    page,\n    setPageItems\n  } = useContext(ProductsContext);\n  const {\n    search\n  } = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  window.addEventListener('resize', e => {\n    if (e.target.innerWidth <= 620) {\n      setPageItems(initialItemsPageSelect);\n    }\n  });\n  useMemo(() => {\n    if (sortCarts[path]) {\n      searchParams.set('sort', sortCarts[path] === 'Alphabetically' ? 'name' : sortCarts[path] === 'Newest' ? 'age' : 'price');\n    }\n\n    if (!['home', 'favorites', 'cart'].includes(path)) {\n      if (pageItems[path] !== 'All items') {\n        searchParams.set('perPage', pageItems[path]);\n        searchParams.set('page', page[path]);\n      } else {\n        searchParams.delete('perPage');\n        searchParams.delete('page');\n      }\n    }\n\n    if (!['home', 'cart'].includes(path)) {\n      if (appliedValue[path]) {\n        searchParams.set('query', appliedValue[path]);\n        searchParams.delete('sort');\n        searchParams.delete('perPage');\n        searchParams.delete('page');\n      } else {\n        searchParams.delete('query');\n      }\n    }\n\n    history.push(`${path}?${searchParams.toString()}`);\n  }, [sortCarts[path], pageItems[path], page[path], appliedValue[path], path]);\n  let forPage = useMemo(() => (page[path] - 1) * pageItems[path], [page[path], pageItems[path]]);\n  let toPage = useMemo(() => pageItems[path] * page[path], [page[path], pageItems[path]]);\n  const sortProducts = useMemo(() => {\n    switch (sortCarts[path]) {\n      case 'Newest':\n        return [...products].sort((a, b) => b.model.localeCompare(a.model));\n\n      case 'Alphabetically':\n        return [...products].sort((a, b) => a.name.localeCompare(b.name));\n\n      case 'Cheapest':\n        return [...products].sort((a, b) => a.price[0] - b.price[0]);\n\n      default:\n        return products;\n    }\n  }, [sortCarts[path], products]);\n  const visibleProducts = useMemo(() => {\n    if (appliedValue[path]) {\n      return products.filter(product => product.name.toLowerCase().includes(appliedValue[path].toLowerCase()));\n    }\n\n    if (!appliedValue[path]) {\n      if (pageItems[path] !== \"All items\") {\n        return sortProducts.slice(forPage, toPage);\n      }\n\n      return sortProducts;\n    }\n  }, [appliedValue[path], sortProducts, products, pageItems[path], forPage, toPage]);\n  console.log('PageContent');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Breadcrumbs Breadcrumbs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"Breadcrumbs-Item\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/icons-page/home.svg\",\n    alt: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/icons-page/next-disabled.svg\",\n    alt: \"Next\",\n    className: \"Breadcrumbs-Item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Breadcrumbs-Item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, path[0].toUpperCase() + path.slice(1))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageContent-Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, visibleProducts.length, \" items\")), appliedValue[path] && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, visibleProducts.length, \" results\"), path === 'favorites' && visibleProducts.length === 0 && !appliedValue[path] && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/page_gif/favorites.gif\",\n    className: \"PageContent-FavoritesGif\",\n    alt: \"Favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), appliedValue[path] && visibleProducts.length === 0 && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/page_gif/search.gif\",\n    className: \"PageContent-SearchGif\",\n    alt: \"Search\",\n    width: \"370px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }), path !== 'favorites' && !appliedValue[path] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Selects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-SelectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Sort by\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectSort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SelectSort, {\n    list: ['Alphabetically', 'Newest', 'Cheapest'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectsContainer PageContent-SelectsContainer_hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-SelectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \"Items on page\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectPageItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SelectItems, {\n    list: ['All items', '4', '8', '16'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, visibleProducts.map(product => /*#__PURE__*/React.createElement(Product, Object.assign({}, product, {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }))))), path !== 'favorites' && pageItems[path] !== \"All items\" && !appliedValue[path] && /*#__PURE__*/React.createElement(Pagination, {\n    total: sortProducts.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }));\n});\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/PageContent/PageContent.jsx"],"names":["React","useContext","useMemo","ProductsContext","useHistory","useLocation","PropTypes","NavLink","Product","SelectSort","SelectItems","initialItemsPageSelect","Pagination","PageContent","memo","products","title","appliedValue","path","sortCarts","pageItems","page","setPageItems","search","history","searchParams","URLSearchParams","window","addEventListener","e","target","innerWidth","set","includes","delete","push","toString","forPage","toPage","sortProducts","sort","a","b","model","localeCompare","name","price","visibleProducts","filter","product","toLowerCase","slice","console","log","toUpperCase","length","map","id","propTypes","array","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport { ProductsContext } from '../../ProductsProvider';\nimport { useHistory, useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Product } from '../Product';\nimport { SelectSort } from '../SelectSort';\nimport { SelectItems } from '../SelectItems';\nimport { initialItemsPageSelect } from '../../helpers/select';\nimport './PageContent.scss';\nimport { Pagination } from '../Pagination';\n\nexport const PageContent = React.memo(({ products, title }) => {\n  const {\n    appliedValue,\n    path,\n    sortCarts,\n    pageItems,\n    page,\n    setPageItems\n  } = useContext(ProductsContext);\n  const { search } = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n\n  window.addEventListener('resize', (e) => {\n    if (e.target.innerWidth <= 620) {\n      setPageItems(initialItemsPageSelect);\n  }})\n\n  useMemo(() => {\n    if (sortCarts[path]) {\n      searchParams.set('sort',\n        sortCarts[path] === 'Alphabetically'\n        ? 'name': sortCarts[path] === 'Newest'\n        ? 'age' : 'price');\n    }\n\n    if (!['home', 'favorites', 'cart'].includes(path)) {\n      if (pageItems[path] !== 'All items') {\n        searchParams.set('perPage', pageItems[path]);\n        searchParams.set('page', page[path]);\n      } else {\n        searchParams.delete('perPage');\n        searchParams.delete('page');\n      }\n    }\n\n    if (!['home', 'cart'].includes(path)) {\n      if (appliedValue[path]) {\n        searchParams.set('query', appliedValue[path]);\n        searchParams.delete('sort');\n        searchParams.delete('perPage');\n        searchParams.delete('page');\n      } else {\n        searchParams.delete('query');\n      }\n    }\n    history.push(`${path}?${searchParams.toString()}`);\n\n  },\n  [ sortCarts[path],\n  pageItems[path],\n     page[path],\n     appliedValue[path],\n     path]\n  );\n\n  let forPage = useMemo(() => (page[path] - 1) * pageItems[path],\n  [page[path], pageItems[path]]);\n  let toPage = useMemo(() => pageItems[path] * page[path],\n  [page[path], pageItems[path]])\n\n  const sortProducts = useMemo(() => {\n    switch(sortCarts[path]) {\n      case 'Newest':\n        return [...products].sort((a, b) => (\n          b.model.localeCompare(a.model)));\n      case 'Alphabetically':\n        return [...products].sort((a, b) => (\n          a.name.localeCompare(b.name)));\n      case 'Cheapest':\n        return [...products].sort((a, b) => (\n          a.price[0] - b.price[0]));\n      default:\n        return products;\n    }\n  }, [sortCarts[path], products]);\n\n  const visibleProducts = useMemo(() => {\n    if ( appliedValue[path]) {\n      return products.filter(product => product.name.toLowerCase()\n      .includes(appliedValue[path].toLowerCase()))\n    }\n\n    if (!appliedValue[path]) {\n      if (pageItems[path] !== \"All items\") {\n        return sortProducts.slice(forPage, toPage);\n      }\n      return sortProducts;\n    }\n  }, [appliedValue[path],\n     sortProducts,\n     products,\n     pageItems[path],\n     forPage,\n     toPage]);\n  \n     console.log('PageContent');\n\n  return (\n    <div className=\"PageContent\">\n      {!appliedValue[path] && (\n        <div className=\"PageContent-Breadcrumbs Breadcrumbs\">\n          <NavLink className=\"Breadcrumbs-Item\" to=\"/home\">\n            <img src=\"./img/icons-page/home.svg\" alt=\"Home\"/>\n          </NavLink>\n          <img\n            src=\"./img/icons-page/next-disabled.svg\"\n            alt=\"Next\"\n            className=\"Breadcrumbs-Item\"\n          />\n          <p className=\"Breadcrumbs-Item\">\n            {path[0].toUpperCase() + path.slice(1)}\n          </p>\n        </div>\n      )}\n      <div className=\"PageContent-Main\">\n        {!appliedValue[path] && (\n          <>\n            <h1 className=\"PageContent-Title\">{title}</h1>\n            <p className=\"PageContent-Count\">\n            {visibleProducts.length} items\n            </p>\n          </>\n        )}\n        {appliedValue[path] && (\n          <p className=\"PageContent-Results\">\n          {visibleProducts.length} results\n          </p>\n        )}\n        {(path === 'favorites'\n          && visibleProducts.length === 0\n          && !appliedValue[path]\n         ) && (\n          <img\n            src=\"./img/page_gif/favorites.gif\"\n            className=\"PageContent-FavoritesGif\"\n            alt=\"Favorites\"\n          />\n        )}\n        {(appliedValue[path] && visibleProducts.length === 0) && (\n          <img\n            src=\"./img/page_gif/search.gif\"\n            className=\"PageContent-SearchGif\"\n            alt=\"Search\"\n            width=\"370px\"\n          />\n        )}\n        {(path !== 'favorites' && !appliedValue[path]) && (\n          <div className=\"PageContent-Selects\">\n            <div className=\"PageContent-SelectsContainer\">\n              <p className=\"PageContent-SelectName\">Sort by</p>\n              <div className=\"PageContent-SelectSort\">\n                <SelectSort\n                  list={['Alphabetically', 'Newest', 'Cheapest']}\n                />\n              </div>\n            </div>\n            <div className=\"PageContent-SelectsContainer PageContent-SelectsContainer_hidden\">\n              <p className=\"PageContent-SelectName\">Items on page</p>\n              <div className=\"PageContent-SelectPageItems\">\n                <SelectItems\n                  list={['All items', '4', '8' , '16']}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"PageContent-Content\">\n          {visibleProducts.map(product => (\n            <Product {...product} key={product.id}/>)\n          )}\n        </div>\n      </div>\n      {(path !== 'favorites'\n        && pageItems[path] !== \"All items\"\n        && !appliedValue[path]) && (\n        <Pagination total={sortProducts.length}/>)}\n    </div>\n  )\n})\n\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/ProductsProvider.jsx\";\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { PropTypes } from 'prop-types';\nimport products from './data/products.json';\nimport { debounce } from '../../helpers/debounce';\nimport { initialValue } from '../../helpers/search';\nexport const ProductsContext = React.createContext({\n  favourites: [],\n  setFavorites: () => {},\n  carts: [],\n  setCarts: () => {},\n  productsList: [],\n  visibleSearch: true,\n  setVisibleSearch: () => {},\n  app\n});\nexport const ProductsProvider = ({\n  children\n}) => {\n  const [productsList, setProductsList] = useState(products);\n  const [visibleSearch, setVisibleSearch] = useState(true);\n  const [appliedValue, setAppliedValue] = useState(initialValue);\n  const applyValue = useCallback(debounce(setAppliedValue, 1000), []);\n  const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')) || []);\n  const [carts, setCarts] = useState(JSON.parse(localStorage.getItem('carts')) || []);\n  console.log(favorites.filter);\n  console.log(products.filter(item => favorites.includes(item.id)));\n  useEffect(() => localStorage.setItem('favorites', JSON.stringify(favorites)), [favorites]);\n  useEffect(() => localStorage.setItem('carts', JSON.stringify(carts)), [carts]);\n  const contextValue = useMemo(() => ({\n    favorites,\n    setFavorites,\n    carts,\n    setCarts,\n    productsList,\n    visibleSearch,\n    setVisibleSearch\n  }), [favorites, carts, visibleSearch, setVisibleSearch]);\n  return /*#__PURE__*/React.createElement(ProductsContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, children);\n};\nProductsProvider.propTypes = {\n  children: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/ProductsProvider.jsx"],"names":["React","useMemo","useState","useEffect","useCallback","PropTypes","products","debounce","initialValue","ProductsContext","createContext","favourites","setFavorites","carts","setCarts","productsList","visibleSearch","setVisibleSearch","app","ProductsProvider","children","setProductsList","appliedValue","setAppliedValue","applyValue","favorites","JSON","parse","localStorage","getItem","console","log","filter","item","includes","id","setItem","stringify","contextValue","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,EAA8CC,WAA9C,QAAiE,OAAjE;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAGA,OAAO,MAAMC,eAAe,GAAGT,KAAK,CAACU,aAAN,CAAoB;AACjDC,EAAAA,UAAU,EAAE,EADqC;AAEjDC,EAAAA,YAAY,EAAE,MAAM,CAAE,CAF2B;AAGjDC,EAAAA,KAAK,EAAE,EAH0C;AAIjDC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAJ+B;AAKjDC,EAAAA,YAAY,EAAE,EALmC;AAMjDC,EAAAA,aAAa,EAAE,IANkC;AAOjDC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAPuB;AAQjDC,EAAAA;AARiD,CAApB,CAAxB;AAWP,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAM,CAACL,YAAD,EAAeM,eAAf,IAAkCnB,QAAQ,CAACI,QAAD,CAAhD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAACM,YAAD,CAAhD;AACA,QAAMgB,UAAU,GAAGpB,WAAW,CAACG,QAAQ,CAACgB,eAAD,EAAkB,IAAlB,CAAT,EAAkC,EAAlC,CAA9B;AAEA,QAAM,CAACE,SAAD,EAAYb,YAAZ,IAA4BV,QAAQ,CACxCwB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD,EADT,CAA1C;AAGA,QAAM,CAAChB,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACwB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAA9C,CAAlC;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACO,MAAtB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYzB,QAAQ,CAAC0B,MAAT,CAAgBC,IAAI,IAAIR,SAAS,CAACS,QAAV,CAAmBD,IAAI,CAACE,EAAxB,CAAxB,CAAZ;AAEAhC,EAAAA,SAAS,CAAC,MACRyB,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCV,IAAI,CAACW,SAAL,CAAeZ,SAAf,CAAlC,CADO,EAEN,CAACA,SAAD,CAFM,CAAT;AAIAtB,EAAAA,SAAS,CAAC,MACRyB,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BV,IAAI,CAACW,SAAL,CAAexB,KAAf,CAA9B,CADO,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,QAAMyB,YAAY,GAAGrC,OAAO,CAAC,OAC3B;AACEwB,IAAAA,SADF;AAEEb,IAAAA,YAFF;AAGEC,IAAAA,KAHF;AAIEC,IAAAA,QAJF;AAKEC,IAAAA,YALF;AAMEC,IAAAA,aANF;AAOEC,IAAAA;AAPF,GAD2B,CAAD,EAUzB,CAACQ,SAAD,EAAYZ,KAAZ,EAAmBG,aAAnB,EAAkCC,gBAAlC,CAVyB,CAA5B;AAaA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEqB,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,QADH,CADF;AAKD,CAzCM;AA2CPD,gBAAgB,CAACoB,SAAjB,GAA6B;AAC3BnB,EAAAA,QAAQ,EAAEf,SAAS,CAACmC,KAAV,CAAgBC;AADC,CAA7B","sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { PropTypes } from 'prop-types';\nimport products from './data/products.json';\nimport { debounce } from '../../helpers/debounce';\nimport { initialValue } from '../../helpers/search';\n\n\nexport const ProductsContext = React.createContext({\n  favourites: [],\n  setFavorites: () => {},\n  carts: [],\n  setCarts: () => {},\n  productsList: [],\n  visibleSearch: true,\n  setVisibleSearch: () => {},\n  app\n});\n\nexport const ProductsProvider = ({ children }) => {\n  const [productsList, setProductsList] = useState(products);\n  const [visibleSearch, setVisibleSearch] = useState(true);\n  const [appliedValue, setAppliedValue] = useState(initialValue);\n  const applyValue = useCallback(debounce(setAppliedValue, 1000), []);\n\n  const [favorites, setFavorites] = useState(\n    JSON.parse(localStorage.getItem('favorites')) || []\n  );\n  const [carts, setCarts] = useState(JSON.parse(localStorage.getItem('carts')) || []);\n  \n  \n  console.log(favorites.filter);\n  console.log(products.filter(item => favorites.includes(item.id)));\n  \n  useEffect(() => (\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n  ), [favorites]);\n\n  useEffect(() => (\n    localStorage.setItem('carts', JSON.stringify(carts))\n  ), [carts]);\n\n  const contextValue = useMemo(() => (\n    {\n      favorites,\n      setFavorites,\n      carts,\n      setCarts,\n      productsList,\n      visibleSearch,\n      setVisibleSearch,\n    }\n  ), [favorites, carts, visibleSearch, setVisibleSearch]);\n\n\n  return (\n    <ProductsContext.Provider value={contextValue}>\n      {children}\n    </ProductsContext.Provider>\n  )\n}\n\nProductsProvider.propTypes = {\n  children: PropTypes.array.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/PageContent/PageContent.jsx\";\nimport React, { useContext, useMemo } from 'react';\nimport { ProductsContext } from '../../ProductsProvider';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { CartProduct } from '../CartProduct';\nimport { SelectSort } from '../SelectSort';\nimport { SelectItems } from '../SelectItems';\nimport './PageContent.scss';\nimport { Pagination } from '../Pagination';\nexport const PageContent = ({\n  products,\n  title\n}) => {\n  const {\n    appliedValue,\n    path,\n    sortCarts,\n    pageItems,\n    page\n  } = useContext(ProductsContext); // const forPage = ((page[path] - 1) * perPage[path]);\n  // const toPage = perPage[path] * page[path] > total ? total : perPage * page;\n\n  let forPage = (page[path] - 1) * pageItems[path];\n  let toPage = pageItems[path] * page[path];\n  const sortProducts = useMemo(() => {\n    switch (sortCarts[path]) {\n      case 'Alphabetically':\n        return [...products].sort((a, b) => a.name.localeCompare(b.name));\n\n      case 'Price low to hight':\n        return [...products].sort((a, b) => a.price[0] - b.price[0]);\n\n      case 'Price hight to low':\n        return [...products].sort((a, b) => b.price[0] - a.price[0]);\n\n      case undefined:\n        return products;\n\n      default:\n        return products;\n    }\n  }, [sortCarts[path], products]);\n  const productsItems = useMemo(() => {\n    if (path !== \"favorites\") {\n      if (pageItems[path] !== \"All items\") {\n        return sortProducts.slice(forPage, toPage);\n      }\n    } // if (pageItems[path] === \"All items\" || path === \"favorites\") {\n    //   return sortProducts;\n    // }\n\n\n    if (path === \"favorites\") {\n      // else if (pageItems[path] !== \"All items\") {\n      return products;\n    }\n  }, [pageItems[path], forPage, toPage, pa]); // let forPage = ((page[path] - 1) * perPage[path]);\n  // let toPage = perPage[path] * page[path] > products.length ? products.length : perPage[path] * page[path];\n  // let toPage = perPage[path] * page[path];\n\n  const visibleProducts = useMemo(() => appliedValue[path] ? products.filter(product => product.name.toLowerCase().includes(appliedValue[path].toLowerCase())) : productsItems, [appliedValue[path], sortProducts, products]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"PageContent-Link nav\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/home.svg\",\n    alt: \"Home\",\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/next-disabled.svg\",\n    alt: \"Next\",\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, path[0].toUpperCase() + path.slice(1))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageContent-Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, visibleProducts.length, \" items\")), appliedValue[path] && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, visibleProducts.length, \" results\"), path !== 'favorites' && !appliedValue[path] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Selects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-SelectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Sort by\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectSort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SelectSort, {\n    list: ['Alphabetically', 'Price hight to low', 'Price low to hight'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectsContainer PageContent-SelectsContainer_hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-SelectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"Items on page\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectPageItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SelectItems, {\n    list: ['All items', '7', '14'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, visibleProducts.map(product => /*#__PURE__*/React.createElement(CartProduct, Object.assign({}, product, {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 44\n    }\n  }))))), path !== 'favorites' && pageItems[path] !== \"All items\" && /*#__PURE__*/React.createElement(Pagination, {\n    total: sortProducts.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 71\n    }\n  }));\n};\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/PageContent/PageContent.jsx"],"names":["React","useContext","useMemo","ProductsContext","PropTypes","NavLink","CartProduct","SelectSort","SelectItems","Pagination","PageContent","products","title","appliedValue","path","sortCarts","pageItems","page","forPage","toPage","sortProducts","sort","a","b","name","localeCompare","price","undefined","productsItems","slice","pa","visibleProducts","filter","product","toLowerCase","includes","toUpperCase","length","map","id","propTypes","array","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,oBAAP;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAClD,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA;AALI,MAMFhB,UAAU,CAACE,eAAD,CANd,CADkD,CASlD;AACA;;AACA,MAAIe,OAAO,GAAI,CAACD,IAAI,CAACH,IAAD,CAAJ,GAAa,CAAd,IAAmBE,SAAS,CAACF,IAAD,CAA3C;AACA,MAAIK,MAAM,GAAGH,SAAS,CAACF,IAAD,CAAT,GAAkBG,IAAI,CAACH,IAAD,CAAnC;AAEA,QAAMM,YAAY,GAAGlB,OAAO,CAAC,MAAM;AACjC,YAAOa,SAAS,CAACD,IAAD,CAAhB;AACE,WAAK,gBAAL;AACE,eAAO,CAAC,GAAGH,QAAJ,EAAcU,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KACxBD,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBF,CAAC,CAACC,IAAvB,CADK,CAAP;;AAEF,WAAK,oBAAL;AACE,eAAO,CAAC,GAAGb,QAAJ,EAAcU,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KACxBD,CAAC,CAACI,KAAF,CAAQ,CAAR,IAAaH,CAAC,CAACG,KAAF,CAAQ,CAAR,CADR,CAAP;;AAEF,WAAK,oBAAL;AACE,eAAO,CAAC,GAAGf,QAAJ,EAAcU,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KACxBA,CAAC,CAACG,KAAF,CAAQ,CAAR,IAAaJ,CAAC,CAACI,KAAF,CAAQ,CAAR,CADR,CAAP;;AAEF,WAAKC,SAAL;AACE,eAAOhB,QAAP;;AACF;AACE,eAAOA,QAAP;AAbJ;AAeD,GAhB2B,EAgBzB,CAACI,SAAS,CAACD,IAAD,CAAV,EAAkBH,QAAlB,CAhByB,CAA5B;AAkBA,QAAMiB,aAAa,GAAG1B,OAAO,CAAC,MAAM;AAClC,QAAIY,IAAI,KAAK,WAAb,EAA0B;AACxB,UAAIE,SAAS,CAACF,IAAD,CAAT,KAAoB,WAAxB,EAAqC;AACnC,eAAOM,YAAY,CAACS,KAAb,CAAmBX,OAAnB,EAA4BC,MAA5B,CAAP;AACD;AACF,KALiC,CAMlC;AACA;AACA;;;AACA,QAAIL,IAAI,KAAK,WAAb,EAA0B;AAC1B;AACE,aAAOH,QAAP;AACD;AACF,GAb4B,EAa1B,CAACK,SAAS,CAACF,IAAD,CAAV,EAAkBI,OAAlB,EAA2BC,MAA3B,EAAkCW,EAAlC,CAb0B,CAA7B,CAhCkD,CA+ClD;AACA;AACA;;AAEA,QAAMC,eAAe,GAAG7B,OAAO,CAAC,MAC9BW,YAAY,CAACC,IAAD,CAAZ,GACKH,QAAQ,CAACqB,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACT,IAAR,CAAaU,WAAb,GACzBC,QADyB,CAChBtB,YAAY,CAACC,IAAD,CAAZ,CAAmBoB,WAAnB,EADgB,CAA3B,CADL,GAGKN,aAJwB,EAK5B,CAACf,YAAY,CAACC,IAAD,CAAb,EAAqBM,YAArB,EAAmCT,QAAnC,CAL4B,CAA/B;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACE,YAAY,CAACC,IAAD,CAAb,iBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAA0C,IAAA,EAAE,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,gBAAT;AAA0B,IAAA,GAAG,EAAC,MAA9B;AAAqC,IAAA,SAAS,EAAC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,GAAG,EAAC,yBAAT;AAAmC,IAAA,GAAG,EAAC,MAAvC;AAA8C,IAAA,SAAS,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAG,IAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBA,IAAI,CAAC,CAAD,CAAJ,CAAQsB,WAAR,KAAwBtB,IAAI,CAACe,KAAL,CAAW,CAAX,CAA5C,CALF,CAFJ,eAUE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAChB,YAAY,CAACC,IAAD,CAAb,iBACC,uDACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCF,KAAnC,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCmB,eAAe,CAACM,MADjB,WAFF,CAFJ,EASGxB,YAAY,CAACC,IAAD,CAAZ,iBACC;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCiB,eAAe,CAACM,MADjB,aAVJ,EAcIvB,IAAI,KAAK,WAAT,IAAwB,CAACD,YAAY,CAACC,IAAD,CAAtC,iBACC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,CAAC,gBAAD,EAAmB,oBAAnB,EAAyC,oBAAzC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,eAOE;AAAK,IAAA,SAAS,EAAC,kEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,CAAC,WAAD,EAAc,GAAd,EAAmB,IAAnB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAPF,CAfJ,eA8BE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIiB,eAAe,CAACO,GAAhB,CAAoBL,OAAO,iBAAI,oBAAC,WAAD,oBAAiBA,OAAjB;AAA0B,IAAA,GAAG,EAAEA,OAAO,CAACM,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B,CADJ,CA9BF,CAVF,EA4CKzB,IAAI,KAAK,WAAT,IAAwBE,SAAS,CAACF,IAAD,CAAT,KAAoB,WAA9C,iBAA+D,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEM,YAAY,CAACiB,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5ClE,CADF;AAgDD,CA1GM;AA4GP3B,WAAW,CAAC8B,SAAZ,GAAwB;AACtB7B,EAAAA,QAAQ,EAAEP,SAAS,CAACqC,KAAV,CAAgBC,UADJ;AAEtB9B,EAAAA,KAAK,EAAER,SAAS,CAACuC,MAAV,CAAiBD;AAFF,CAAxB","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport { ProductsContext } from '../../ProductsProvider';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { CartProduct } from '../CartProduct';\nimport { SelectSort } from '../SelectSort';\nimport { SelectItems } from '../SelectItems';\nimport './PageContent.scss';\nimport { Pagination } from '../Pagination';\n\nexport const PageContent = ({ products, title }) => {\n  const {\n    appliedValue,\n    path,\n    sortCarts,\n    pageItems,\n    page,\n  } = useContext(ProductsContext);\n\n  // const forPage = ((page[path] - 1) * perPage[path]);\n  // const toPage = perPage[path] * page[path] > total ? total : perPage * page;\n  let forPage = ((page[path] - 1) * pageItems[path]);\n  let toPage = pageItems[path] * page[path];\n\n  const sortProducts = useMemo(() => {\n    switch(sortCarts[path]) {\n      case 'Alphabetically':\n        return [...products].sort((a, b) => (\n          a.name.localeCompare(b.name)));\n      case 'Price low to hight':\n        return [...products].sort((a, b) => (\n          a.price[0] - b.price[0]));\n      case 'Price hight to low':\n        return [...products].sort((a, b) => (\n          b.price[0] - a.price[0]));\n      case undefined:\n        return products;\n      default:\n        return products;\n    }\n  }, [sortCarts[path], products]);\n\n  const productsItems = useMemo(() => {\n    if (path !== \"favorites\") {\n      if (pageItems[path] !== \"All items\") {\n        return sortProducts.slice(forPage, toPage);\n      }\n    }\n    // if (pageItems[path] === \"All items\" || path === \"favorites\") {\n    //   return sortProducts;\n    // }\n    if (path === \"favorites\") {\n    // else if (pageItems[path] !== \"All items\") {\n      return products;\n    }\n  }, [pageItems[path], forPage, toPage,pa])\n\n  // let forPage = ((page[path] - 1) * perPage[path]);\n  // let toPage = perPage[path] * page[path] > products.length ? products.length : perPage[path] * page[path];\n  // let toPage = perPage[path] * page[path];\n\n  const visibleProducts = useMemo(() => (\n    appliedValue[path]\n      ?  products.filter(product => product.name.toLowerCase()\n          .includes(appliedValue[path].toLowerCase()))\n      :  productsItems\n  ), [appliedValue[path], sortProducts, products]);\n\n  return (\n    <div className=\"PageContent\">\n      {!appliedValue[path] && (\n        <div className=\"PageContent-Nav\">\n          <NavLink className=\"PageContent-Link nav\" to=\"/home\">\n            <img src=\"./img/home.svg\" alt=\"Home\" className=\"nav\"/>\n          </NavLink>\n          <img src=\"./img/next-disabled.svg\" alt=\"Next\" className=\"nav\"/>\n          <p className=\"nav\">{path[0].toUpperCase() + path.slice(1)}</p>\n        </div>\n      )}\n      <div className=\"PageContent-Main\">\n        {!appliedValue[path] && (\n          <>\n            <h1 className=\"PageContent-Title\">{title}</h1>\n            <p className=\"PageContent-Count\">\n            {visibleProducts.length} items\n            </p>\n          </>\n        )}\n        {appliedValue[path] && (\n          <p className=\"PageContent-Results\">\n          {visibleProducts.length} results\n          </p>\n        )}\n        {(path !== 'favorites' && !appliedValue[path]) && (\n          <div className=\"PageContent-Selects\">\n            <div className=\"PageContent-SelectsContainer\">\n              <p className=\"PageContent-SelectName\">Sort by</p>\n              <div className=\"PageContent-SelectSort\">\n                <SelectSort list={['Alphabetically', 'Price hight to low', 'Price low to hight']}/>\n              </div>\n            </div>\n            <div className=\"PageContent-SelectsContainer PageContent-SelectsContainer_hidden\">\n              <p className=\"PageContent-SelectName\">Items on page</p>\n              <div className=\"PageContent-SelectPageItems\">\n                <SelectItems list={['All items', '7', '14']}/>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"PageContent-Content\">\n          { visibleProducts.map(product => <CartProduct {...product} key={product.id}/>)}\n        </div>\n      </div>\n      {((path !== 'favorites' && pageItems[path] !== \"All items\")) && <Pagination total={sortProducts.length}/>}\n    </div>\n  )\n}\n\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
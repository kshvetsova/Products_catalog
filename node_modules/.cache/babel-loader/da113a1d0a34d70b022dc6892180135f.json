{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/PageContent/PageContent.jsx\";\nimport React, { useContext, useMemo, useState } from 'react';\nimport { ProductsContext } from '../../ProductsProvider';\nimport { useHistory, useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Product } from '../Product';\nimport { SelectSort } from '../SelectSort';\nimport { SelectItems } from '../SelectItems';\nimport { initialItemsPageSelect } from '../../helpers/select';\nimport './PageContent.scss';\nimport { Pagination } from '../Pagination';\nimport { initialToggleSelectItems, initialToggleSelectSort } from '../../helpers/select';\nexport const PageContent = React.memo(({\n  products,\n  title\n}) => {\n  const {\n    appliedValue,\n    path,\n    sortCarts,\n    pageItems,\n    page,\n    setPageItems\n  } = useContext(ProductsContext);\n  const {\n    search\n  } = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  const [toggleSort, setToggleSort] = useState(initialToggleSelectSort);\n  const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelectItems);\n  window.addEventListener('resize', e => {\n    if (e.target.innerWidth <= 620) {\n      setPageItems(initialItemsPageSelect);\n    }\n  });\n  useMemo(() => {\n    if (sortCarts[path]) {\n      searchParams.set('sort', sortCarts[path] === 'Alphabetically' ? 'name' : sortCarts[path] === 'Newest' ? 'age' : 'price');\n    }\n\n    if (!['home', 'favorites', 'cart'].includes(path)) {\n      if (pageItems[path] !== 'All items') {\n        searchParams.set('perPage', pageItems[path]);\n        searchParams.set('page', page[path]);\n      } else {\n        searchParams.delete('perPage');\n        searchParams.delete('page');\n      }\n    }\n\n    if (!['home', 'cart'].includes(path)) {\n      if (appliedValue[path]) {\n        searchParams.set('query', appliedValue[path]);\n        searchParams.delete('sort');\n        searchParams.delete('perPage');\n        searchParams.delete('page');\n      } else {\n        searchParams.delete('query');\n      }\n    }\n\n    history.push(`${path}?${searchParams.toString()}`);\n  }, [sortCarts[path], pageItems[path], page[path], appliedValue[path], path]);\n  let forPage = useMemo(() => (page[path] - 1) * pageItems[path], [page[path], pageItems[path]]);\n  let toPage = useMemo(() => pageItems[path] * page[path], [page[path], pageItems[path]]);\n  const sortProducts = useMemo(() => {\n    switch (sortCarts[path]) {\n      case 'Newest':\n        return [...products].sort((a, b) => b.model.localeCompare(a.model));\n\n      case 'Alphabetically':\n        return [...products].sort((a, b) => a.name.localeCompare(b.name));\n\n      case 'Cheapest':\n        return [...products].sort((a, b) => a.price[0] - b.price[0]);\n\n      default:\n        return products;\n    }\n  }, [sortCarts[path], products]);\n  const visibleProducts = useMemo(() => {\n    if (appliedValue[path]) {\n      return products.filter(product => product.name.toLowerCase().includes(appliedValue[path].toLowerCase()));\n    }\n\n    if (!appliedValue[path]) {\n      if (pageItems[path] !== \"All items\") {\n        return sortProducts.slice(forPage, toPage);\n      }\n\n      return sortProducts;\n    }\n  }, [appliedValue[path], sortProducts, products, pageItems[path], forPage, toPage]);\n  const listSort = useMemo(() => ['Alphabetically', 'Newest', 'Cheapest'], []);\n  const listItems = useMemo(() => ['All items', '4', '8', '16'], []);\n  console.log('PageContent');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Breadcrumbs Breadcrumbs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"Breadcrumbs-Item\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/icons-page/home.svg\",\n    alt: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/icons-page/next-disabled.svg\",\n    alt: \"Next\",\n    className: \"Breadcrumbs-Item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Breadcrumbs-Item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, path[0].toUpperCase() + path.slice(1))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, !appliedValue[path] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"PageContent-Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, visibleProducts.length, \" items\")), appliedValue[path] && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-Results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, visibleProducts.length, \" results\"), path === 'favorites' && visibleProducts.length === 0 && !appliedValue[path] && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/page_gif/favorites.gif\",\n    className: \"PageContent-FavoritesGif\",\n    alt: \"Favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }), appliedValue[path] && visibleProducts.length === 0 && /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/page_gif/search.gif\",\n    className: \"PageContent-SearchGif\",\n    alt: \"Search\",\n    width: \"370px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), path !== 'favorites' && !appliedValue[path] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Selects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-SelectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \"Sort by\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectSort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SelectSort, {\n    list: listSort,\n    toggleSort: toggleSort,\n    setToggleSort: setToggleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectsContainer PageContent-SelectsContainer_hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"PageContent-SelectName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Items on page\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-SelectPageItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SelectItems, {\n    list: listItems,\n    toggleItemsPage: true,\n    setToggleItemsPage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageContent-Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, visibleProducts.map(product => /*#__PURE__*/React.createElement(Product, Object.assign({}, product, {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }))))), path !== 'favorites' && pageItems[path] !== \"All items\" && !appliedValue[path] && /*#__PURE__*/React.createElement(Pagination, {\n    total: sortProducts.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }));\n});\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/PageContent/PageContent.jsx"],"names":["React","useContext","useMemo","useState","ProductsContext","useHistory","useLocation","PropTypes","NavLink","Product","SelectSort","SelectItems","initialItemsPageSelect","Pagination","initialToggleSelectItems","initialToggleSelectSort","PageContent","memo","products","title","appliedValue","path","sortCarts","pageItems","page","setPageItems","search","history","searchParams","URLSearchParams","toggleSort","setToggleSort","toggleItemsPage","setToggleItemsPage","window","addEventListener","e","target","innerWidth","set","includes","delete","push","toString","forPage","toPage","sortProducts","sort","a","b","model","localeCompare","name","price","visibleProducts","filter","product","toLowerCase","slice","listSort","listItems","console","log","toUpperCase","length","map","id","propTypes","array","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo, useState } from 'react';\nimport { ProductsContext } from '../../ProductsProvider';\nimport { useHistory, useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { Product } from '../Product';\nimport { SelectSort } from '../SelectSort';\nimport { SelectItems } from '../SelectItems';\nimport { initialItemsPageSelect } from '../../helpers/select';\nimport './PageContent.scss';\nimport { Pagination } from '../Pagination';\nimport { initialToggleSelectItems, initialToggleSelectSort } from '../../helpers/select';\n\nexport const PageContent = React.memo(({ products, title }) => {\n  const {\n    appliedValue,\n    path,\n    sortCarts,\n    pageItems,\n    page,\n    setPageItems\n  } = useContext(ProductsContext);\n  const { search } = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  const [toggleSort, setToggleSort] = useState(initialToggleSelectSort);\n  const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelectItems);\n\n  window.addEventListener('resize', (e) => {\n    if (e.target.innerWidth <= 620) {\n      setPageItems(initialItemsPageSelect);\n  }})\n\n  useMemo(() => {\n    if (sortCarts[path]) {\n      searchParams.set('sort',\n        sortCarts[path] === 'Alphabetically'\n        ? 'name': sortCarts[path] === 'Newest'\n        ? 'age' : 'price');\n    }\n\n    if (!['home', 'favorites', 'cart'].includes(path)) {\n      if (pageItems[path] !== 'All items') {\n        searchParams.set('perPage', pageItems[path]);\n        searchParams.set('page', page[path]);\n      } else {\n        searchParams.delete('perPage');\n        searchParams.delete('page');\n      }\n    }\n\n    if (!['home', 'cart'].includes(path)) {\n      if (appliedValue[path]) {\n        searchParams.set('query', appliedValue[path]);\n        searchParams.delete('sort');\n        searchParams.delete('perPage');\n        searchParams.delete('page');\n      } else {\n        searchParams.delete('query');\n      }\n    }\n    history.push(`${path}?${searchParams.toString()}`);\n\n  },[sortCarts[path],\n     pageItems[path],\n     page[path],\n     appliedValue[path],\n     path]);\n\n  let forPage = useMemo(() => (page[path] - 1) * pageItems[path],\n  [page[path], pageItems[path]]);\n  let toPage = useMemo(() => pageItems[path] * page[path],\n  [page[path], pageItems[path]])\n\n  const sortProducts = useMemo(() => {\n    switch(sortCarts[path]) {\n      case 'Newest':\n        return [...products].sort((a, b) => (\n          b.model.localeCompare(a.model)));\n      case 'Alphabetically':\n        return [...products].sort((a, b) => (\n          a.name.localeCompare(b.name)));\n      case 'Cheapest':\n        return [...products].sort((a, b) => (\n          a.price[0] - b.price[0]));\n      default:\n        return products;\n    }\n  }, [sortCarts[path], products]);\n\n  const visibleProducts = useMemo(() => {\n    if ( appliedValue[path]) {\n      return products.filter(product => product.name.toLowerCase()\n      .includes(appliedValue[path].toLowerCase()))\n    }\n\n    if (!appliedValue[path]) {\n      if (pageItems[path] !== \"All items\") {\n        return sortProducts.slice(forPage, toPage);\n      }\n      return sortProducts;\n    }\n  }, [appliedValue[path],\n     sortProducts,\n     products,\n     pageItems[path],\n     forPage,\n     toPage]);\n\n  const listSort = useMemo(() => ['Alphabetically', 'Newest', 'Cheapest'], []);\n  const listItems = useMemo(() => ['All items', '4', '8' , '16'], []);\n  console.log('PageContent');\n\n  return (\n    <div className=\"PageContent\">\n      {!appliedValue[path] && (\n        <div className=\"PageContent-Breadcrumbs Breadcrumbs\">\n          <NavLink className=\"Breadcrumbs-Item\" to=\"/home\">\n            <img src=\"./img/icons-page/home.svg\" alt=\"Home\"/>\n          </NavLink>\n          <img\n            src=\"./img/icons-page/next-disabled.svg\"\n            alt=\"Next\"\n            className=\"Breadcrumbs-Item\"\n          />\n          <p className=\"Breadcrumbs-Item\">\n            {path[0].toUpperCase() + path.slice(1)}\n          </p>\n        </div>\n      )}\n      <div className=\"PageContent-Main\">\n        {!appliedValue[path] && (\n          <>\n            <h1 className=\"PageContent-Title\">{title}</h1>\n            <p className=\"PageContent-Count\">\n            {visibleProducts.length} items\n            </p>\n          </>\n        )}\n        {appliedValue[path] && (\n          <p className=\"PageContent-Results\">\n          {visibleProducts.length} results\n          </p>\n        )}\n        {(path === 'favorites'\n          && visibleProducts.length === 0\n          && !appliedValue[path]\n         ) && (\n          <img\n            src=\"./img/page_gif/favorites.gif\"\n            className=\"PageContent-FavoritesGif\"\n            alt=\"Favorites\"\n          />\n        )}\n        {(appliedValue[path] && visibleProducts.length === 0) && (\n          <img\n            src=\"./img/page_gif/search.gif\"\n            className=\"PageContent-SearchGif\"\n            alt=\"Search\"\n            width=\"370px\"\n          />\n        )}\n        {(path !== 'favorites' && !appliedValue[path]) && (\n          <div className=\"PageContent-Selects\">\n            <div className=\"PageContent-SelectsContainer\">\n              <p className=\"PageContent-SelectName\">Sort by</p>\n              <div className=\"PageContent-SelectSort\">\n                <SelectSort\n                  list={listSort}\n                  toggleSort={toggleSort}\n                  setToggleSort={setToggleSort}\n                />\n              </div>\n            </div>\n            <div className=\"PageContent-SelectsContainer PageContent-SelectsContainer_hidden\">\n              <p className=\"PageContent-SelectName\">Items on page</p>\n              <div className=\"PageContent-SelectPageItems\">\n                <SelectItems\n                  list={listItems}\n                  toggleItemsPage\n                  setToggleItemsPage\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"PageContent-Content\">\n          {visibleProducts.map(product => (\n            <Product {...product} key={product.id}/>)\n          )}\n        </div>\n      </div>\n      {(path !== 'favorites'\n        && pageItems[path] !== \"All items\"\n        && !appliedValue[path]) && (\n        <Pagination total={sortProducts.length}/>)}\n    </div>\n  )\n})\n\nPageContent.propTypes = {\n  products: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
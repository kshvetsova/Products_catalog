{"ast":null,"code":"import _defineProperty from\"/Users/katerynashvetsova/Documents/projects/products_catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/katerynashvetsova/Documents/projects/products_catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useContext}from'react';import classNames from'classnames';import'./SelectSort.scss';import{ProductsContext}from'../../ProductsProvider';export var SelectSort=React.memo(function(_ref){var list=_ref.list;var _useContext=useContext(ProductsContext),path=_useContext.path,toggleSort=_useContext.toggleSort,setToggleSort=_useContext.setToggleSort,sortCarts=_useContext.sortCarts,setSortCarts=_useContext.setSortCarts;return/*#__PURE__*/React.createElement(\"div\",{className:\"Select\"},/*#__PURE__*/React.createElement(\"button\",{className:classNames('Select-Button',{image_rotate:toggleSort[path]}),type:\"button\",onClick:function onClick(){return setToggleSort(_objectSpread(_objectSpread({},toggleSort),{},_defineProperty({},path,!toggleSort[path])));}},/*#__PURE__*/React.createElement(\"p\",{className:\"Select-Text\"},sortCarts[path]),/*#__PURE__*/React.createElement(\"img\",{src:\"./img/icons-page/down.svg\",alt:\"Down\",className:\"button-image\"})),toggleSort[path]&&/*#__PURE__*/React.createElement(\"ul\",{className:classNames('Select-List',{})},list.map(function(item){return/*#__PURE__*/React.createElement(\"li\",{className:classNames('Select-Item',{selected:item===sortCarts[path]}),key:item,onClick:function onClick(){setSortCarts(_objectSpread(_objectSpread({},sortCarts),{},_defineProperty({},path,item)));setToggleSort(_objectSpread(_objectSpread({},toggleSort),{},_defineProperty({},path,false)));}},item);})));});","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/SelectSort/SelectSort.jsx"],"names":["React","useContext","classNames","ProductsContext","SelectSort","memo","list","path","toggleSort","setToggleSort","sortCarts","setSortCarts","image_rotate","map","item","selected"],"mappings":"uWAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,MAAO,mBAAP,CACA,OAASC,eAAT,KAAgC,wBAAhC,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAGJ,KAAK,CAACK,IAAN,CAAW,cAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CACjD,gBAMIL,UAAU,CAACE,eAAD,CANd,CACEI,IADF,aACEA,IADF,CAEEC,UAFF,aAEEA,UAFF,CAGEC,aAHF,aAGEA,aAHF,CAIEC,SAJF,aAIEA,SAJF,CAKEC,YALF,aAKEA,YALF,CAQA,mBACE,2BAAK,SAAS,CAAC,QAAf,eACE,8BACE,SAAS,CAAET,UAAU,CAAC,eAAD,CAAkB,CACrCU,YAAY,CAAEJ,UAAU,CAACD,IAAD,CADa,CAAlB,CADvB,CAIE,IAAI,CAAC,QAJP,CAKE,OAAO,CAAE,yBAAME,CAAAA,aAAa,gCAAKD,UAAL,wBAAkBD,IAAlB,CAAyB,CAACC,UAAU,CAACD,IAAD,CAApC,GAAnB,EALX,eAOE,yBAAG,SAAS,CAAC,aAAb,EAA4BG,SAAS,CAACH,IAAD,CAArC,CAPF,cAQE,2BACE,GAAG,CAAC,2BADN,CAEE,GAAG,CAAC,MAFN,CAGE,SAAS,CAAC,cAHZ,EARF,CADF,CAeGC,UAAU,CAACD,IAAD,CAAV,eACC,0BAAI,SAAS,CAAEL,UAAU,CAAC,aAAD,CAAgB,EAAhB,CAAzB,EAGGI,IAAI,CAACO,GAAL,CAAS,SAAAC,IAAI,qBACZ,0BACE,SAAS,CAAEZ,UAAU,CAAC,aAAD,CAAgB,CACnCa,QAAQ,CAAED,IAAI,GAAKJ,SAAS,CAACH,IAAD,CADO,CAAhB,CADvB,CAIE,GAAG,CAAEO,IAJP,CAKE,OAAO,CAAE,kBAAM,CACbH,YAAY,gCAAKD,SAAL,wBAAiBH,IAAjB,CAAwBO,IAAxB,GAAZ,CACAL,aAAa,gCAAKD,UAAL,wBAAkBD,IAAlB,CAAyB,KAAzB,GAAb,CACD,CARH,EAUGO,IAVH,CADY,EAAb,CAHH,CAhBJ,CADF,CAsCD,CA/CyB,CAAnB","sourcesContent":["import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './SelectSort.scss';\nimport { ProductsContext } from '../../ProductsProvider';\n\nexport const SelectSort = React.memo(({ list }) => {\n  const {\n    path,\n    toggleSort,\n    setToggleSort,\n    sortCarts,\n    setSortCarts\n  } = useContext(ProductsContext);\n\n  return (\n    <div className=\"Select\">\n      <button\n        className={classNames('Select-Button', {\n          image_rotate: toggleSort[path],\n        })}\n        type=\"button\"\n        onClick={() => setToggleSort({...toggleSort, [path]: !toggleSort[path]})}\n      >\n        <p className=\"Select-Text\">{sortCarts[path]}</p>\n        <img\n          src=\"./img/icons-page/down.svg\"\n          alt=\"Down\"\n          className=\"button-image\"\n        />\n      </button>\n      {toggleSort[path] && (\n        <ul className={classNames('Select-List', {\n        })}\n        >\n          {list.map(item => (\n            <li\n              className={classNames('Select-Item', {\n                selected: item === sortCarts[path],\n              })}\n              key={item}\n              onClick={() => {\n                setSortCarts({...sortCarts, [path]: item});\n                setToggleSort({...toggleSort, [path]: false});\n              }}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n})\n\nSelectSort.propTypes = {\n  list: PropTypes.array.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
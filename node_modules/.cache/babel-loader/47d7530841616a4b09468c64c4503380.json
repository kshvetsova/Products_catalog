{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/ProductCart/ProductCart.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductCart.scss';\nexport const ProductCart = ({\n  name,\n  price,\n  image,\n  id,\n  count,\n  quantity,\n  setQuantity\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Close\",\n    onClick: () => setCarts(carts.filter(item => item.id !== id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"ProductCart-Image\",\n    src: image,\n    width: \"66px\",\n    height: \"66px\",\n    alt: \"Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ProductCart-Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerQuantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Remove buttonProduct\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-Quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, count), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Add buttonProduct\",\n    onClick: () => {\n      setCarts([...carts].map(item => item.id === id ? { ...item,\n        count: item.count + 1\n      } : item));\n      setQuantity(quantity + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"$\", price)));\n};\nProductCart.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  quantity: PropTypes.number.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/ProductCart/ProductCart.jsx"],"names":["React","useState","useEffect","useContext","PropTypes","ProductCart","name","price","image","id","count","quantity","setQuantity","setCarts","carts","filter","item","map","propTypes","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductCart.scss';\n\n\nexport const ProductCart = ({ name, price, image, id, count, quantity, setQuantity }) => {\n\n  return (\n    <div className=\"ProductCart\">\n      <div className=\"ProductCart-ContainerLeft\">\n        <button\n          className=\"ProductCart-Close\"\n          onClick={() => setCarts(carts.filter(item => item.id !== id))}\n        >\n          {}\n        </button>\n        <img\n          className=\"ProductCart-Image\"\n          src={image}\n          width=\"66px\"\n          height=\"66px\"\n          alt=\"Phone\"\n        />\n        <p className=\"ProductCart-Name\">{name}</p>\n      </div>\n      <div className=\"ProductCart-ContainerRight\">\n        <div className=\"ProductCart-ContainerQuantity\">\n          <button\n            className=\"ProductCart-Remove buttonProduct\" \n            disabled={true}>{}</button>\n          <div className=\"ProductCart-Quantity\">{count}</div>\n          <button\n            className=\"ProductCart-Add buttonProduct\"\n            onClick={() => {\n              setCarts([...carts].map(item => (item.id === id) ? { ...item, count: item.count + 1} : item));\n              setQuantity(quantity + 1);\n              }}\n          >\n            {}\n          </button>\n        </div>\n        <div className=\"ProductCart-Price\">${price}</div>\n      </div>\n    </div>\n  )\n}\n\nProductCart.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  quantity: PropTypes.number.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
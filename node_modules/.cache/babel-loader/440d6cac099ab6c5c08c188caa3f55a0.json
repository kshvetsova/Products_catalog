{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/ProductsProvider.jsx\";\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport products from './data/products.json';\nimport { debounce } from './helpers/debounce';\nimport { initialValue } from './helpers/search';\nimport { initialSortSelect, initialToggleSelect, initialItemsPageSelect } from './helpers/select';\nimport { initialPage } from './helpers/pagination';\nexport const ProductsContext = React.createContext({\n  favourites: [],\n  setFavorites: () => {},\n  carts: [],\n  setCarts: () => {},\n  productsList: {},\n  appliedValue: {},\n  setAppliedValue: () => {},\n  applyValue: () => {},\n  path: '',\n  sortCarts: {},\n  setSortCarts: () => {},\n  setToggleSort: () => {},\n  toggleSort: {},\n  pageItems: {},\n  setPageItems: () => {},\n  toggleItemsPage: {},\n  setToggleItemsPage: () => {},\n  page: {},\n  setPage: () => {},\n  search: '',\n  changeHistory: () => {}\n});\nconst root = document.getElementById('root');\nexport const ProductsProvider = ({\n  children\n}) => {\n  const [productsList] = useState({\n    phones: products,\n    tablets: products.slice(0, 10),\n    accessories: products.slice(0, 5)\n  });\n  const [appliedValue, setAppliedValue] = useState(initialValue);\n  const applyValue = useCallback(debounce(setAppliedValue, 1000), []);\n  const [sortCarts, setSortCarts] = useState(initialSortSelect);\n  const [toggleSort, setToggleSort] = useState(initialToggleSelect);\n  const [pageItems, setPageItems] = useState(initialItemsPageSelect);\n  const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelect);\n  const [page, setPage] = useState(initialPage);\n  console.log(productsList.length);\n  const {\n    pathname,\n    search\n  } = useLocation();\n  const path = pathname.slice(1);\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  useMemo(() => {\n    if (pageItems[path] !== \"All items\" && !['home', 'favorites', 'cart'].includes(path)) {\n      searchParams.set('page', page[path]);\n      history.push(`?${searchParams.toString()}`);\n    } else if (pageItems[path] === \"All items\") {\n      searchParams.delete('page');\n      history.push(`?${searchParams.toString()}`);\n    }\n\n    if (pageItems[path] !== initialPageItems[page]) {\n      setPage({ ...page,\n        page\n      });\n    }\n  }, [pageItems[path], path]); // useMemo(() => {\n  //   if (pageItems[path] !== \"All items\") {\n  //     searchParams.set('page', 1);\n  //     history.push(`?${searchParams.toString()}`);\n  //   }\n  // }, pageItems[path]);\n\n  console.log(searchParams);\n  const changeHistory = useCallback((name, value) => {\n    searchParams.set(name, value);\n    history.push(`?${searchParams.toString()}`);\n  }, []);\n  console.log(search);\n  const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')) || []);\n  const [carts, setCarts] = useState(JSON.parse(localStorage.getItem('carts')) || []); // console.log(favorites.filter);\n  // console.log(products.filter(item => favorites.includes(item.id)));\n\n  useEffect(() => localStorage.setItem('favorites', JSON.stringify(favorites)), [favorites]);\n  useEffect(() => localStorage.setItem('carts', JSON.stringify(carts)), [carts]);\n  useEffect(() => root.scrollIntoView(), [path]);\n  const contextValue = useMemo(() => ({\n    favorites,\n    setFavorites,\n    carts,\n    setCarts,\n    productsList,\n    appliedValue,\n    setAppliedValue,\n    applyValue,\n    path,\n    sortCarts,\n    setSortCarts,\n    toggleSort,\n    setToggleSort,\n    pageItems,\n    setPageItems,\n    toggleItemsPage,\n    setToggleItemsPage,\n    page,\n    setPage,\n    search,\n    changeHistory\n  }), [favorites, carts, productsList, appliedValue, applyValue, setAppliedValue, path, sortCarts, toggleSort, pageItems, toggleItemsPage, page, search]);\n  return /*#__PURE__*/React.createElement(ProductsContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, children);\n};\nProductsProvider.propTypes = {\n  children: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/ProductsProvider.jsx"],"names":["React","useMemo","useState","useEffect","useCallback","useLocation","useHistory","PropTypes","products","debounce","initialValue","initialSortSelect","initialToggleSelect","initialItemsPageSelect","initialPage","ProductsContext","createContext","favourites","setFavorites","carts","setCarts","productsList","appliedValue","setAppliedValue","applyValue","path","sortCarts","setSortCarts","setToggleSort","toggleSort","pageItems","setPageItems","toggleItemsPage","setToggleItemsPage","page","setPage","search","changeHistory","root","document","getElementById","ProductsProvider","children","phones","tablets","slice","accessories","console","log","length","pathname","history","searchParams","URLSearchParams","includes","set","push","toString","delete","initialPageItems","name","value","favorites","JSON","parse","localStorage","getItem","setItem","stringify","scrollIntoView","contextValue","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport products from './data/products.json';\nimport { debounce } from './helpers/debounce';\nimport { initialValue } from './helpers/search';\nimport { initialSortSelect, initialToggleSelect, initialItemsPageSelect } from './helpers/select';\nimport { initialPage } from './helpers/pagination';\n\n\nexport const ProductsContext = React.createContext({\n  favourites: [],\n  setFavorites: () => {},\n  carts: [],\n  setCarts: () => {},\n  productsList: {},\n  appliedValue: {},\n  setAppliedValue: () => {},\n  applyValue: () => {},\n  path: '',\n  sortCarts: {},\n  setSortCarts: () => {},\n  setToggleSort: () => {},\n  toggleSort: {},\n  pageItems: {},\n  setPageItems: () => {},\n  toggleItemsPage: {},\n  setToggleItemsPage: () => {},\n  page: {},\n  setPage: () => {},\n  search: '',\n  changeHistory: () => {},\n});\nconst root = document.getElementById('root');\n\nexport const ProductsProvider = ({ children }) => {\n  const [productsList] = useState({\n    phones: products,\n    tablets: products.slice(0, 10),\n    accessories: products.slice(0, 5),\n  });\n  const [appliedValue, setAppliedValue] = useState(initialValue);\n  const applyValue = useCallback(debounce(setAppliedValue, 1000), []);\n  const [sortCarts, setSortCarts] = useState(initialSortSelect);\n  const [toggleSort, setToggleSort] = useState(initialToggleSelect);\n  const [pageItems, setPageItems] = useState(initialItemsPageSelect)\n  const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelect);\n  const [page, setPage] = useState(initialPage);\n\n  console.log(productsList.length);\n\n  const { pathname, search } = useLocation();\n  const path = pathname.slice(1);\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  \n  useMemo(() => {\n    if (pageItems[path] !== \"All items\" &&\n    !['home', 'favorites', 'cart'].includes(path) ) {\n      searchParams.set('page', page[path]);\n      history.push(`?${searchParams.toString()}`);\n    }\n    else if (pageItems[path] === \"All items\") {\n      searchParams.delete('page');\n      history.push(`?${searchParams.toString()}`);\n    }\n\n    if (pageItems[path] !== initialPageItems[page]) {\n      setPage({...page, page})\n    }\n  },[pageItems[path], path]);\n\n  // useMemo(() => {\n  //   if (pageItems[path] !== \"All items\") {\n  //     searchParams.set('page', 1);\n  //     history.push(`?${searchParams.toString()}`);\n  //   }\n  // }, pageItems[path]);\n\n  console.log(searchParams);\n  \n  const changeHistory = useCallback((name, value) => {\n    searchParams.set(name, value);\n    history.push(`?${searchParams.toString()}`);\n  }, []);\n  \n  console.log(search);\n  const [favorites, setFavorites] = useState(\n    JSON.parse(localStorage.getItem('favorites')) || []\n  );\n  const [carts, setCarts] = useState(\n    JSON.parse(localStorage.getItem('carts')) || []\n  );\n  // console.log(favorites.filter);\n  // console.log(products.filter(item => favorites.includes(item.id)));\n  useEffect(() => (\n    localStorage.setItem('favorites', JSON.stringify(favorites))\n  ), [favorites]);\n\n  useEffect(() => (\n    localStorage.setItem('carts', JSON.stringify(carts))\n  ), [carts]);\n\n  useEffect(() => root.scrollIntoView(), [path]);\n  \n  const contextValue = useMemo(() => (\n    {\n      favorites,\n      setFavorites,\n      carts,\n      setCarts,\n      productsList,\n      appliedValue,\n      setAppliedValue,\n      applyValue,\n      path,\n      sortCarts,\n      setSortCarts,\n      toggleSort,\n      setToggleSort,\n      pageItems,\n      setPageItems,\n      toggleItemsPage,\n      setToggleItemsPage,\n      page,\n      setPage,\n      search,\n      changeHistory,\n    }\n  ), [favorites, carts, productsList, appliedValue,applyValue, setAppliedValue,\n    path, sortCarts, toggleSort, pageItems, toggleItemsPage, page, search]);\n\n\n  return (\n    <ProductsContext.Provider value={contextValue}>\n      {children}\n    </ProductsContext.Provider>\n  )\n}\n\nProductsProvider.propTypes = {\n  children: PropTypes.array.isRequired,\n};"]},"metadata":{},"sourceType":"module"}
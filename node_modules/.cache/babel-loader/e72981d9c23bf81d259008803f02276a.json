{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/HomePage/HomePage.jsx\";\nimport { createSecretKey } from 'crypto';\nimport React, { useEffect, useState } from 'react';\nimport { useCallback } from 'react';\nimport './HomePage.scss';\nconst initialImages = ['./img/slider/1.jpg', './img/slider/2.jpg', './img/slider/3.jpg', './img/slider/4.jpg', './img/slider/5.jpg', './img/slider/6.jpg'];\nexport const HomePage = () => {\n  const [images, setImages] = useState(initialImages);\n  const [key, setKey] = useState(1); //const [imageStart, setImageStart] = useState(initialImages);\n\n  const [imageWidth, setImageWidth] = useState(Math.ceil(document.documentElement.clientWidth * 72.2 / 100));\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [count, setCount] = useState(''); //const [cu]\n  // useEffect(() => {\n  //   return setImages(initialImages);\n  // }, [])\n\n  console.log(imageWidth);\n\n  const handleClickNext = () => {\n    const maxPosition = (images.length - 1) * imageWidth;\n    let position = currentPosition - imageWidth; // if(-position < maxPosition) {\n    //   // position = currentPosition - imageWidth;\n    //   setImages([...images.slice(1), ...images.splice(0, 1)]);\n    //   console.log(images);\n    //   // position = currentPosition - imageWidth;\n    //   // setCount(1);\n    // }\n    // if(count) {\n    //   position = (0 - imageWidth) + imageWidth;\n    // }\n\n    if (-position > maxPosition) {\n      position = -maxPosition + imageWidth; // setCurrentPosition(position);\n    } else {\n      setImages([...images, ...images.splice(0, 1)]);\n      console.log(images);\n    } // images.push(...images.splice(0, 1));\n    // setImages([\n    //   ...images.filter(item => item !== images[0])\n    //   ,images[0]]);\n\n\n    setKey(key + 1); // setImages([...images.slice(1), images[0]]);\n    // setImages([...images.slice(1), ...images.splice(0, 1)]);\n    // console.log(images);\n    // setImages([...images.slice(1), images[0]]);\n    // setCurrentPosition(position);\n    //}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HomePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductsSlider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductsSlider-Button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/prev.svg\",\n    alt: \"Prev\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"ProductsSlider-List\" // style={{\n    //   width: `${imageWidth}px`,\n    // }}\n    // style={{\n    //   transition: `transform ${300}ms`,\n    //   transform: `translateX(${currentPosition}px)`,\n    //   marginLeft: `${-(currentPosition + itemWidth * step}px`,\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, images.map((image, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"ProductsSlider-Item\",\n    key: key + index,\n    style: {\n      transition: `transform ${1000}ms`,\n      transform: `translateX(${currentPosition}px)` //marginLeft: `${0}px`,\n      // marginLeft: `${currentPosition}px`,\n      //marginLeft: `${-(currentPosition + imageWidth * 1)}px`,\n      // marginLeft: `${(count)\n      //   ? -(currentPosition + imageWidth * 1) : 0\n      //  }px`,\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: image,\n    className: \"image\" // style={{\n    //   transition: `transform ${300}ms`,\n    //   transform: `translateX(${currentPosition}px)`,\n    //   marginLeft: `${0}px`,\n    // }}\n    // // style={{\n    // //   width: `${imageWidth}px`,\n    // // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductsSlider-Button\",\n    onClick: () => handleClickNext(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/next.svg\",\n    alt: \"Next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/HomePage/HomePage.jsx"],"names":["createSecretKey","React","useEffect","useState","useCallback","initialImages","HomePage","images","setImages","key","setKey","imageWidth","setImageWidth","Math","ceil","document","documentElement","clientWidth","currentPosition","setCurrentPosition","count","setCount","console","log","handleClickNext","maxPosition","length","position","splice","map","image","index","transition","transform"],"mappings":"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","sourcesContent":["import { createSecretKey } from 'crypto';\nimport React, { useEffect, useState } from 'react';\nimport { useCallback } from 'react';\nimport './HomePage.scss';\n\nconst initialImages = [\n  './img/slider/1.jpg',\n  './img/slider/2.jpg',\n  './img/slider/3.jpg',\n  './img/slider/4.jpg',\n  './img/slider/5.jpg',\n  './img/slider/6.jpg',\n];\n\n\nexport const HomePage = () => {\n  const [images, setImages] = useState(initialImages);\n  const [ key , setKey ] = useState(1);\n  //const [imageStart, setImageStart] = useState(initialImages);\n  const [ imageWidth, setImageWidth] = useState(Math.ceil(document.documentElement.clientWidth * 72.2 / 100));\n  const [ currentPosition, setCurrentPosition] = useState(0);\n  const [count, setCount] = useState('');\n  //const [cu]\n  // useEffect(() => {\n  //   return setImages(initialImages);\n  // }, [])\n  \n  console.log(imageWidth);\n  const handleClickNext = () => {\n    const maxPosition = ((images.length) - 1) * imageWidth;\n    let position = currentPosition - imageWidth;\n    // if(-position < maxPosition) {\n    //   // position = currentPosition - imageWidth;\n    //   setImages([...images.slice(1), ...images.splice(0, 1)]);\n    //   console.log(images);\n    //   // position = currentPosition - imageWidth;\n    //   // setCount(1);\n    // }\n    // if(count) {\n    //   position = (0 - imageWidth) + imageWidth;\n    // }\n    if (-position > maxPosition) {\n      position = -maxPosition + imageWidth;\n      // setCurrentPosition(position);\n    } else {\n      setImages([...images, ...images.splice(0, 1)]);\n      console.log(images);\n    }\n\n    // images.push(...images.splice(0, 1));\n      // setImages([\n      //   ...images.filter(item => item !== images[0])\n      //   ,images[0]]);\n      setKey(key + 1);\n      // setImages([...images.slice(1), images[0]]);\n      // setImages([...images.slice(1), ...images.splice(0, 1)]);\n      // console.log(images);\n      // setImages([...images.slice(1), images[0]]);\n      // setCurrentPosition(position);\n    //}\n  };\n\n  return (\n    <div className=\"HomePage\">\n      <div className=\"ProductsSlider\">\n        <button className=\"ProductsSlider-Button\">\n          <img src=\"./img/prev.svg\" alt=\"Prev\"/>\n        </button>\n        <ul\n          className=\"ProductsSlider-List\"\n          // style={{\n          //   width: `${imageWidth}px`,\n          // }}\n          // style={{\n          //   transition: `transform ${300}ms`,\n          //   transform: `translateX(${currentPosition}px)`,\n          //   marginLeft: `${-(currentPosition + itemWidth * step}px`,\n          // }}\n        >\n          {images.map((image, index) => (\n            <li\n              className=\"ProductsSlider-Item\"\n              key={key + index}\n              style={{\n                transition: `transform ${1000}ms`,\n                transform: `translateX(${currentPosition}px)`,\n                //marginLeft: `${0}px`,\n                // marginLeft: `${currentPosition}px`,\n                //marginLeft: `${-(currentPosition + imageWidth * 1)}px`,\n                // marginLeft: `${(count)\n                //   ? -(currentPosition + imageWidth * 1) : 0\n                //  }px`,\n              }}\n            >\n              <img\n                src={image}\n                alt={image}\n                className=\"image\"\n                // style={{\n                //   transition: `transform ${300}ms`,\n                //   transform: `translateX(${currentPosition}px)`,\n                //   marginLeft: `${0}px`,\n                // }}\n                // // style={{\n                // //   width: `${imageWidth}px`,\n                // // }}\n              />\n            </li>\n          ))}\n        </ul>\n        <button className=\"ProductsSlider-Button\" onClick={() => handleClickNext()}>\n          <img src=\"./img/next.svg\" alt=\"Next\"/>\n        </button>\n      </div>\n\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}
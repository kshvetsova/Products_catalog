{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/ProductCart/ProductCart.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductCart.scss';\nimport phones from '../../data/phones.json';\nimport { ProductsContext } from '../../ProductsProvider';\nexport const ProductCart = ({\n  name,\n  price,\n  image,\n  id,\n  quantity,\n  setQuantity\n}) => {\n  //const [quantity, setQuantity] = useState(1);\n  // const [quantity, setQuantity] = useState(\n  //   JSON.parse(localStorage.getItem('quantity')) || {[id]: 1}\n  const {\n    setCarts,\n    carts\n  } = useContext(ProductsContext); // );\n  // useEffect(() => setQuantity({...quantity, [id]: 1}), []);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Close\",\n    onClick: () => setCarts(carts.filter(item => item !== id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"ProductCart-Image\",\n    src: image,\n    width: \"66px\",\n    height: \"66px\",\n    alt: \"Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ProductCart-Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-ContainerQuantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Remove buttonProduct\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-Quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ProductCart-Add buttonProduct\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProductCart-Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"$\", price[0])));\n};\nProductCart.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  id: PropTypes.number.isRequired,\n  quantity: PropTypes.object.isRequired,\n  setQuantity: PropTypes.func.isRequired // type: PropTypes.string.isRequired,\n  // tech: PropTypes.arrayOf(PropTypes.array.isRequired,\n  //   ).isRequired,\n\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/ProductCart/ProductCart.jsx"],"names":["React","useState","useEffect","useContext","PropTypes","phones","ProductsContext","ProductCart","name","price","image","id","quantity","setQuantity","setCarts","carts","filter","item","propTypes","string","isRequired","arrayOf","number","object","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,EAAtB;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA;AAApC,CAAD,KAAuD;AAChF;AACA;AACA;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBZ,UAAU,CAACG,eAAD,CAAtC,CAJgF,CAKhF;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,OAAO,EAAE,MAAMQ,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAIA,IAAI,KAAKN,EAA9B,CAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,GAAG,EAAED,KAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,GAAG,EAAC,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAcE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCF,IAAjC,CAdF,CADF,eAiBE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,kCAAlB;AAAqD,IAAA,QAAQ,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,OAAO,EAAE,MAAM,CAAE,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqCC,KAAK,CAAC,CAAD,CAA1C,CATF,CAjBF,CADF;AA+BD,CAvCM;AAyCPF,WAAW,CAACW,SAAZ,GAAwB;AACtBR,EAAAA,KAAK,EAAEN,SAAS,CAACe,MAAV,CAAiBC,UADF;AAGtBZ,EAAAA,IAAI,EAAEJ,SAAS,CAACe,MAAV,CAAiBC,UAHD;AAItBX,EAAAA,KAAK,EAAEL,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,MAAV,CAAiBF,UAAnC,EAA+CA,UAJhC;AAKtBT,EAAAA,EAAE,EAAEP,SAAS,CAACkB,MAAV,CAAiBF,UALC;AAMtBR,EAAAA,QAAQ,EAAER,SAAS,CAACmB,MAAV,CAAiBH,UANL;AAOtBP,EAAAA,WAAW,EAAET,SAAS,CAACoB,IAAV,CAAeJ,UAPN,CAStB;AACA;AACA;;AAXsB,CAAxB","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductCart.scss';\nimport phones from '../../data/phones.json';\nimport { ProductsContext } from '../../ProductsProvider';\n\nexport const ProductCart = ({ name, price, image, id, quantity, setQuantity }) => {\n  //const [quantity, setQuantity] = useState(1);\n  // const [quantity, setQuantity] = useState(\n  //   JSON.parse(localStorage.getItem('quantity')) || {[id]: 1}\n  const { setCarts, carts } = useContext(ProductsContext);\n  // );\n  // useEffect(() => setQuantity({...quantity, [id]: 1}), []);\n\n  return (\n    <div className=\"ProductCart\">\n      <div className=\"ProductCart-ContainerLeft\">\n        <button\n          className=\"ProductCart-Close\"\n          onClick={() => setCarts(carts.filter(item => item !== id))}\n        >\n          {}\n        </button>\n        <img\n          className=\"ProductCart-Image\"\n          src={image}\n          width=\"66px\"\n          height=\"66px\"\n          alt=\"Phone\"\n        />\n        <p className=\"ProductCart-Name\">{name}</p>\n      </div>\n      <div className=\"ProductCart-ContainerRight\">\n        <div className=\"ProductCart-ContainerQuantity\">\n          <button className=\"ProductCart-Remove buttonProduct\" disabled={true}>{}</button>\n          <div className=\"ProductCart-Quantity\">{}</div>\n          <button\n            className=\"ProductCart-Add buttonProduct\"\n            onClick={() => {}}\n          >{}</button>\n        </div>\n        <div className=\"ProductCart-Price\">${price[0]}</div>\n      </div>\n    </div>\n  )\n}\n\nProductCart.propTypes = {\n  image: PropTypes.string.isRequired,\n  \n  name: PropTypes.string.isRequired,\n  price: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  id: PropTypes.number.isRequired,\n  quantity: PropTypes.object.isRequired,\n  setQuantity: PropTypes.func.isRequired,\n\n  // type: PropTypes.string.isRequired,\n  // tech: PropTypes.arrayOf(PropTypes.array.isRequired,\n  //   ).isRequired,\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from\"/Users/katerynashvetsova/Documents/projects/react_phone-catalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useContext}from'react';import{ProductsContext}from'../../ProductsProvider';import'./Buttons.scss';export var Buttons=function Buttons(_ref){var id=_ref.id,price=_ref.price,name=_ref.name,image=_ref.image;var _useContext=useContext(ProductsContext),carts=_useContext.carts,setCarts=_useContext.setCarts,favorites=_useContext.favorites,setFavorites=_useContext.setFavorites;return/*#__PURE__*/React.createElement(\"div\",{className:\"Buttons\"},!carts.find(function(item){return item.id===id;})?/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"Buttons-ButtonAdd\",onClick:function onClick(){setCarts([].concat(_toConsumableArray(carts),[{id:id,price:price,name:name,image:image,count:1}]));}},\"Add to cart\"):/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"Buttons-ButtonAdded\"},\"Added to cart\"),!favorites.includes(id)?/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"Buttons-ButtonFavorites\",onClick:function onClick(){return setFavorites([].concat(_toConsumableArray(favorites),[id]));}},/*#__PURE__*/React.createElement(\"img\",{src:\"./img/icons-page/favorites.svg\",alt:\"Favorites\"})):/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"Buttons-ButtonFavorites Buttons-ButtonFavorites_selected\",onClick:function onClick(){return setFavorites(favorites.filter(function(item){return item!==id;}));}},/*#__PURE__*/React.createElement(\"img\",{src:\"./img/icons-page/favorites-selected.svg\",alt:\"Favorites\"})));};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/react_phone-catalog/src/components/Buttons/Buttons.jsx"],"names":["React","useContext","ProductsContext","Buttons","id","price","name","image","carts","setCarts","favorites","setFavorites","find","item","count","includes","filter"],"mappings":"8LAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,eAAT,KAAgC,wBAAhC,CAEA,MAAO,gBAAP,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAgC,IAA7BC,CAAAA,EAA6B,MAA7BA,EAA6B,CAAzBC,KAAyB,MAAzBA,KAAyB,CAAlBC,IAAkB,MAAlBA,IAAkB,CAAZC,KAAY,MAAZA,KAAY,CACrD,gBAAqDN,UAAU,CAACC,eAAD,CAA/D,CAAQM,KAAR,aAAQA,KAAR,CAAeC,QAAf,aAAeA,QAAf,CAAyBC,SAAzB,aAAyBA,SAAzB,CAAoCC,YAApC,aAAoCA,YAApC,CAEA,mBACE,2BAAK,SAAS,CAAC,SAAf,EACG,CAACH,KAAK,CAACI,IAAN,CAAW,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACT,EAAL,GAAYA,EAAhB,EAAf,CAAD,cACC,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,mBAFZ,CAGE,OAAO,CAAE,kBAAM,CAACK,QAAQ,8BAClBD,KADkB,GAErB,CAACJ,EAAE,CAAFA,EAAD,CAAKC,KAAK,CAALA,KAAL,CAAYC,IAAI,CAAJA,IAAZ,CAAkBC,KAAK,CAALA,KAAlB,CAAyBO,KAAK,CAAE,CAAhC,CAFqB,GAAR,CAGb,CANL,gBADD,cAYC,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,qBAFZ,kBAbJ,CAoBG,CAACJ,SAAS,CAACK,QAAV,CAAmBX,EAAnB,CAAD,cACC,8BACA,IAAI,CAAC,QADL,CAEA,SAAS,CAAC,yBAFV,CAGA,OAAO,CAAE,yBAAMO,CAAAA,YAAY,8BAAMD,SAAN,GAAiBN,EAAjB,GAAlB,EAHT,eAKA,2BAAK,GAAG,CAAC,gCAAT,CAA0C,GAAG,CAAC,WAA9C,EALA,CADD,cASC,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,0DAFZ,CAGE,OAAO,CAAE,yBAAMO,CAAAA,YAAY,CAACD,SAAS,CAACM,MAAV,CAAiB,SAAAH,IAAI,QAAIA,CAAAA,IAAI,GAAKT,EAAb,EAArB,CAAD,CAAlB,EAHX,eAKE,2BAAK,GAAG,CAAC,yCAAT,CAAmD,GAAG,CAAC,WAAvD,EALF,CA7BJ,CADF,CAwCD,CA3CM","sourcesContent":["import React, { useContext } from 'react';\nimport { ProductsContext } from '../../ProductsProvider';\nimport { PropTypes } from 'prop-types';\nimport './Buttons.scss';\n\nexport const Buttons = ({ id, price, name, image }) => {\n  const { carts, setCarts, favorites, setFavorites } = useContext(ProductsContext);\n\n  return (\n    <div className=\"Buttons\">\n      {!carts.find(item => item.id === id) ? (\n        <button\n          type=\"button\"\n          className=\"Buttons-ButtonAdd\"\n          onClick={() => {setCarts([\n             ...carts,\n             {id, price, name, image, count: 1},\n          ])}}\n        >\n          Add to cart\n        </button>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"Buttons-ButtonAdded\"\n        >\n          Added to cart\n        </button>\n      )}\n      {!favorites.includes(id) ? (\n        <button\n        type=\"button\"\n        className=\"Buttons-ButtonFavorites\"\n        onClick={() => setFavorites([ ...favorites, id ])}\n      >\n        <img src=\"./img/icons-page/favorites.svg\" alt=\"Favorites\"/>\n      </button>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"Buttons-ButtonFavorites Buttons-ButtonFavorites_selected\"\n          onClick={() => setFavorites(favorites.filter(item => item !== id))}\n        >\n          <img src=\"./img/icons-page/favorites-selected.svg\" alt=\"Favorites\"/>\n        </button>\n      )}\n    </div>\n  )\n};\n\nButtons.propTypes = {\n  id: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/SelectItems/SelectItems.jsx\";\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { ProductsContext } from '../../ProductsProvider';\nexport const SelectItems = ({\n  list\n}) => {\n  const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelect);\n  const {\n    path,\n    setPage,\n    page,\n    // toggleItemsPage,\n    // setToggleItemsPage,\n    pageItems,\n    setPageItems\n  } = useContext(ProductsContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classNames('Select-Button', {\n      image_rotate: toggleItemsPage[path]\n    }),\n    type: \"button\",\n    onClick: () => setToggleItemsPage({ ...toggleItemsPage,\n      [path]: !toggleItemsPage[path]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Select-Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, pageItems[path]), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./img/icons-page/down.svg\",\n    alt: \"Down\",\n    className: \"button-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), toggleItemsPage[path] && /*#__PURE__*/React.createElement(\"ul\", {\n    className: classNames('Select-List', {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, list.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    className: classNames('Select-Item', {\n      selected: item === pageItems[path]\n    }),\n    key: item,\n    onClick: () => {\n      setPageItems({ ...pageItems,\n        [path]: item\n      });\n      setToggleItemsPage({ ...toggleItemsPage,\n        [path]: false\n      });\n\n      if (item !== pageItems[page]) {\n        setPage({ ...page,\n          [path]: 1\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, item))));\n};\nSelectItems.propTypes = {\n  list: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/Users/katerynashvetsova/Documents/projects/products_catalog/src/components/SelectItems/SelectItems.jsx"],"names":["React","useContext","classNames","PropTypes","ProductsContext","SelectItems","list","toggleItemsPage","setToggleItemsPage","useState","initialToggleSelect","path","setPage","page","pageItems","setPageItems","image_rotate","map","item","selected","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAGA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACvC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCC,QAAQ,CAACC,mBAAD,CAAtD;AACA,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,IAHI;AAIL;AACA;AACCC,IAAAA,SANI;AAOJC,IAAAA;AAPI,MAQFd,UAAU,CAACG,eAAD,CARd;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAEF,UAAU,CAAC,eAAD,EAAkB;AACrCc,MAAAA,YAAY,EAAET,eAAe,CAACI,IAAD;AADQ,KAAlB,CADvB;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,OAAO,EAAE,MAAMH,kBAAkB,CAAC,EAChC,GAAGD,eAD6B;AAEhC,OAACI,IAAD,GAAQ,CAACJ,eAAe,CAACI,IAAD;AAFQ,KAAD,CALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BG,SAAS,CAACH,IAAD,CAArC,CAVF,eAWE;AACE,IAAA,GAAG,EAAC,2BADN;AAEE,IAAA,GAAG,EAAC,MAFN;AAGE,IAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,EAkBGJ,eAAe,CAACI,IAAD,CAAf,iBACC;AAAI,IAAA,SAAS,EAAET,UAAU,CAAC,aAAD,EAAgB,EAAhB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGI,IAAI,CAACW,GAAL,CAASC,IAAI,iBACZ;AACE,IAAA,SAAS,EAAEhB,UAAU,CAAC,aAAD,EAAgB;AACnCiB,MAAAA,QAAQ,EAAED,IAAI,KAAKJ,SAAS,CAACH,IAAD;AADO,KAAhB,CADvB;AAIE,IAAA,GAAG,EAAEO,IAJP;AAKE,IAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,SAACH,IAAD,GAAQO;AAAvB,OAAD,CAAZ;AACAV,MAAAA,kBAAkB,CAAC,EAAC,GAAGD,eAAJ;AAAqB,SAACI,IAAD,GAAQ;AAA7B,OAAD,CAAlB;;AACA,UAAGO,IAAI,KAAKJ,SAAS,CAACD,IAAD,CAArB,EAA6B;AAC3BD,QAAAA,OAAO,CAAC,EAAC,GAAGC,IAAJ;AAAU,WAACF,IAAD,GAAQ;AAAlB,SAAD,CAAP;AACD;AACF,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGO,IAbH,CADD,CAHH,CAnBJ,CADF;AA4CD,CAxDM;AA0DPb,WAAW,CAACe,SAAZ,GAAwB;AACtBd,EAAAA,IAAI,EAAEH,SAAS,CAACkB,KAAV,CAAgBC;AADA,CAAxB","sourcesContent":["import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { ProductsContext } from '../../ProductsProvider';\n\n\nexport const SelectItems = ({ list }) => {\n  const [toggleItemsPage, setToggleItemsPage] = useState(initialToggleSelect);\n  const {\n    path,\n    setPage,\n    page,\n   // toggleItemsPage,\n   // setToggleItemsPage,\n    pageItems,\n    setPageItems,\n  } = useContext(ProductsContext);\n\n  return (\n    <div className=\"Select\">\n      <button\n        className={classNames('Select-Button', {\n          image_rotate: toggleItemsPage[path],\n        })}\n        type=\"button\"\n        onClick={() => setToggleItemsPage({\n          ...toggleItemsPage,\n          [path]: !toggleItemsPage[path],\n        })}\n      >\n        <p className=\"Select-Text\">{pageItems[path]}</p>\n        <img\n          src=\"./img/icons-page/down.svg\"\n          alt=\"Down\"\n          className=\"button-image\"\n        />\n      </button>\n      {toggleItemsPage[path] && (\n        <ul className={classNames('Select-List', {\n        })}\n        >\n          {list.map(item => (\n            <li\n              className={classNames('Select-Item', {\n                selected: item === pageItems[path],\n              })}\n              key={item}\n              onClick={() => {\n                setPageItems({...pageItems, [path]: item});\n                setToggleItemsPage({...toggleItemsPage, [path]: false});\n                if(item !== pageItems[page]) {\n                  setPage({...page, [path]: 1});\n                }\n              }}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nSelectItems.propTypes = {\n  list: PropTypes.array.isRequired,\n};"]},"metadata":{},"sourceType":"module"}